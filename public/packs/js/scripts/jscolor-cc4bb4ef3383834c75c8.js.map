{"version":3,"file":"js/scripts/jscolor-cc4bb4ef3383834c75c8.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/scripts/jscolor.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/scripts/jscolor.js\");\n","/**\n * jscolor - JavaScript Color Picker\n *\n * @link    http://jscolor.com\n * @license For open source use: GPLv3\n *          For commercial use: JSColor Commercial License\n * @author  Jan Odvarko - East Desire\n * @version 2.4.6\n *\n * See usage examples at http://jscolor.com/examples/\n */\n\n\n(function (global, factory) {\n\n\t'use strict';\n\n\tif (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// Export jscolor as a module\n\t\tmodule.exports = global.document ?\n\t\t\tfactory (global) :\n\t\t\tfunction (win) {\n\t\t\t\tif (!win.document) {\n\t\t\t\t\tthrow new Error('jscolor needs a window with document');\n\t\t\t\t}\n\t\t\t\treturn factory(win);\n\t\t\t}\n\t\treturn;\n\t}\n\n\t// Default use (no module export)\n\tfactory(global);\n\n})(typeof window !== 'undefined' ? window : this, function (window) { // BEGIN factory\n\n// BEGIN jscolor code\n\n\n'use strict';\n\n\nvar jscolor = (function () { // BEGIN jscolor\n\nvar jsc = {\n\n\n\tinitialized : false,\n\n\tinstances : [], // created instances of jscolor\n\n\treadyQueue : [], // functions waiting to be called after init\n\n\n\tregister : function () {\n\t\tif (typeof window !== 'undefined' && window.document) {\n\t\t\twindow.document.addEventListener('DOMContentLoaded', jsc.pub.init, false);\n\t\t}\n\t},\n\n\n\tinstallBySelector : function (selector, rootNode) {\n\t\trootNode = rootNode ? jsc.node(rootNode) : window.document;\n\t\tif (!rootNode) {\n\t\t\tthrow new Error('Missing root node');\n\t\t}\n\n\t\tvar elms = rootNode.querySelectorAll(selector);\n\n\t\t// for backward compatibility with DEPRECATED installation/configuration using className\n\t\tvar matchClass = new RegExp('(^|\\\\s)(' + jsc.pub.lookupClass + ')(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)', 'i');\n\n\t\tfor (var i = 0; i < elms.length; i += 1) {\n\n\t\t\tif (elms[i].jscolor && elms[i].jscolor instanceof jsc.pub) {\n\t\t\t\tcontinue; // jscolor already installed on this element\n\t\t\t}\n\n\t\t\tif (elms[i].type !== undefined && elms[i].type.toLowerCase() == 'color' && jsc.isColorAttrSupported) {\n\t\t\t\tcontinue; // skips inputs of type 'color' if supported by the browser\n\t\t\t}\n\n\t\t\tvar dataOpts, m;\n\n\t\t\tif (\n\t\t\t\t(dataOpts = jsc.getDataAttr(elms[i], 'jscolor')) !== null ||\n\t\t\t\t(elms[i].className && (m = elms[i].className.match(matchClass))) // installation using className (DEPRECATED)\n\t\t\t) {\n\t\t\t\tvar targetElm = elms[i];\n\n\t\t\t\tvar optsStr = '';\n\t\t\t\tif (dataOpts !== null) {\n\t\t\t\t\toptsStr = dataOpts;\n\n\t\t\t\t} else if (m) { // installation using className (DEPRECATED)\n\t\t\t\t\tconsole.warn('Installation using class name is DEPRECATED. Use data-jscolor=\"\" attribute instead.' + jsc.docsRef);\n\t\t\t\t\tif (m[4]) {\n\t\t\t\t\t\toptsStr = m[4];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar opts = null;\n\t\t\t\tif (optsStr.trim()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\topts = jsc.parseOptionsStr(optsStr);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(e + '\\n' + optsStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew jsc.pub(targetElm, opts);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\tparseOptionsStr : function (str) {\n\t\tvar opts = null;\n\n\t\ttry {\n\t\t\topts = JSON.parse(str);\n\n\t\t} catch (eParse) {\n\t\t\tif (!jsc.pub.looseJSON) {\n\t\t\t\tthrow new Error('Could not parse jscolor options as JSON: ' + eParse);\n\t\t\t} else {\n\t\t\t\t// loose JSON syntax is enabled -> try to evaluate the options string as JavaScript object\n\t\t\t\ttry {\n\t\t\t\t\topts = (new Function ('var opts = (' + str + '); return typeof opts === \"object\" ? opts : {};'))();\n\t\t\t\t} catch (eEval) {\n\t\t\t\t\tthrow new Error('Could not evaluate jscolor options: ' + eEval);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\n\n\tgetInstances : function () {\n\t\tvar inst = [];\n\t\tfor (var i = 0; i < jsc.instances.length; i += 1) {\n\t\t\t// if the targetElement still exists, the instance is considered \"alive\"\n\t\t\tif (jsc.instances[i] && jsc.instances[i].targetElement) {\n\t\t\t\tinst.push(jsc.instances[i]);\n\t\t\t}\n\t\t}\n\t\treturn inst;\n\t},\n\n\n\tcreateEl : function (tagName) {\n\t\tvar el = window.document.createElement(tagName);\n\t\tjsc.setData(el, 'gui', true);\n\t\treturn el;\n\t},\n\n\n\tnode : function (nodeOrSelector) {\n\t\tif (!nodeOrSelector) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (typeof nodeOrSelector === 'string') {\n\t\t\t// query selector\n\t\t\tvar sel = nodeOrSelector;\n\t\t\tvar el = null;\n\t\t\ttry {\n\t\t\t\tel = window.document.querySelector(sel);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!el) {\n\t\t\t\tconsole.warn('No element matches the selector: %s', sel);\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\n\t\tif (jsc.isNode(nodeOrSelector)) {\n\t\t\t// DOM node\n\t\t\treturn nodeOrSelector;\n\t\t}\n\n\t\tconsole.warn('Invalid node of type %s: %s', typeof nodeOrSelector, nodeOrSelector);\n\t\treturn null;\n\t},\n\n\n\t// See https://stackoverflow.com/questions/384286/\n\tisNode : function (val) {\n\t\tif (typeof Node === 'object') {\n\t\t\treturn val instanceof Node;\n\t\t}\n\t\treturn val && typeof val === 'object' && typeof val.nodeType === 'number' && typeof val.nodeName === 'string';\n\t},\n\n\n\tnodeName : function (node) {\n\t\tif (node && node.nodeName) {\n\t\t\treturn node.nodeName.toLowerCase();\n\t\t}\n\t\treturn false;\n\t},\n\n\n\tremoveChildren : function (node) {\n\t\twhile (node.firstChild) {\n\t\t\tnode.removeChild(node.firstChild);\n\t\t}\n\t},\n\n\n\tisTextInput : function (el) {\n\t\treturn el && jsc.nodeName(el) === 'input' && el.type.toLowerCase() === 'text';\n\t},\n\n\n\tisButton : function (el) {\n\t\tif (!el) {\n\t\t\treturn false;\n\t\t}\n\t\tvar n = jsc.nodeName(el);\n\t\treturn (\n\t\t\t(n === 'button') ||\n\t\t\t(n === 'input' && ['button', 'submit', 'reset'].indexOf(el.type.toLowerCase()) > -1)\n\t\t);\n\t},\n\n\n\tisButtonEmpty : function (el) {\n\t\tswitch (jsc.nodeName(el)) {\n\t\t\tcase 'input': return (!el.value || el.value.trim() === '');\n\t\t\tcase 'button': return (el.textContent.trim() === '');\n\t\t}\n\t\treturn null; // could not determine element's text\n\t},\n\n\n\t// See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n\tisPassiveEventSupported : (function () {\n\t\tvar supported = false;\n\n\t\ttry {\n\t\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\t\tget: function () { supported = true; }\n\t\t\t});\n\t\t\twindow.addEventListener('testPassive', null, opts);\n\t\t\twindow.removeEventListener('testPassive', null, opts);\n\t\t} catch (e) {}\n\n\t\treturn supported;\n\t})(),\n\n\n\tisColorAttrSupported : (function () {\n\t\tvar elm = window.document.createElement('input');\n\t\tif (elm.setAttribute) {\n\t\t\telm.setAttribute('type', 'color');\n\t\t\tif (elm.type.toLowerCase() == 'color') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t})(),\n\n\n\tdataProp : '_data_jscolor',\n\n\n\t// usage:\n\t//   setData(obj, prop, value)\n\t//   setData(obj, {prop:value, ...})\n\t//\n\tsetData : function () {\n\t\tvar obj = arguments[0];\n\n\t\tif (arguments.length === 3) {\n\t\t\t// setting a single property\n\t\t\tvar data = obj.hasOwnProperty(jsc.dataProp) ? obj[jsc.dataProp] : (obj[jsc.dataProp] = {});\n\t\t\tvar prop = arguments[1];\n\t\t\tvar value = arguments[2];\n\n\t\t\tdata[prop] = value;\n\t\t\treturn true;\n\n\t\t} else if (arguments.length === 2 && typeof arguments[1] === 'object') {\n\t\t\t// setting multiple properties\n\t\t\tvar data = obj.hasOwnProperty(jsc.dataProp) ? obj[jsc.dataProp] : (obj[jsc.dataProp] = {});\n\t\t\tvar map = arguments[1];\n\n\t\t\tfor (var prop in map) {\n\t\t\t\tif (map.hasOwnProperty(prop)) {\n\t\t\t\t\tdata[prop] = map[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tthrow new Error('Invalid arguments');\n\t},\n\n\n\t// usage:\n\t//   removeData(obj, prop, [prop...])\n\t//\n\tremoveData : function () {\n\t\tvar obj = arguments[0];\n\t\tif (!obj.hasOwnProperty(jsc.dataProp)) {\n\t\t\treturn true; // data object does not exist\n\t\t}\n\t\tfor (var i = 1; i < arguments.length; i += 1) {\n\t\t\tvar prop = arguments[i];\n\t\t\tdelete obj[jsc.dataProp][prop];\n\t\t}\n\t\treturn true;\n\t},\n\n\n\tgetData : function (obj, prop, setDefault) {\n\t\tif (!obj.hasOwnProperty(jsc.dataProp)) {\n\t\t\t// data object does not exist\n\t\t\tif (setDefault !== undefined) {\n\t\t\t\tobj[jsc.dataProp] = {}; // create data object\n\t\t\t} else {\n\t\t\t\treturn undefined; // no value to return\n\t\t\t}\n\t\t}\n\t\tvar data = obj[jsc.dataProp];\n\n\t\tif (!data.hasOwnProperty(prop) && setDefault !== undefined) {\n\t\t\tdata[prop] = setDefault;\n\t\t}\n\t\treturn data[prop];\n\t},\n\n\n\tgetDataAttr : function (el, name) {\n\t\tvar attrName = 'data-' + name;\n\t\tvar attrValue = el.getAttribute(attrName);\n\t\treturn attrValue;\n\t},\n\n\n\tsetDataAttr : function (el, name, value) {\n\t\tvar attrName = 'data-' + name;\n\t\tel.setAttribute(attrName, value);\n\t},\n\n\n\t_attachedGroupEvents : {},\n\n\n\tattachGroupEvent : function (groupName, el, evnt, func) {\n\t\tif (!jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\n\t\t\tjsc._attachedGroupEvents[groupName] = [];\n\t\t}\n\t\tjsc._attachedGroupEvents[groupName].push([el, evnt, func]);\n\t\tel.addEventListener(evnt, func, false);\n\t},\n\n\n\tdetachGroupEvents : function (groupName) {\n\t\tif (jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\n\t\t\tfor (var i = 0; i < jsc._attachedGroupEvents[groupName].length; i += 1) {\n\t\t\t\tvar evt = jsc._attachedGroupEvents[groupName][i];\n\t\t\t\tevt[0].removeEventListener(evt[1], evt[2], false);\n\t\t\t}\n\t\t\tdelete jsc._attachedGroupEvents[groupName];\n\t\t}\n\t},\n\n\n\tpreventDefault : function (e) {\n\t\tif (e.preventDefault) { e.preventDefault(); }\n\t\te.returnValue = false;\n\t},\n\n\n\tcaptureTarget : function (target) {\n\t\t// IE\n\t\tif (target.setCapture) {\n\t\t\tjsc._capturedTarget = target;\n\t\t\tjsc._capturedTarget.setCapture();\n\t\t}\n\t},\n\n\n\treleaseTarget : function () {\n\t\t// IE\n\t\tif (jsc._capturedTarget) {\n\t\t\tjsc._capturedTarget.releaseCapture();\n\t\t\tjsc._capturedTarget = null;\n\t\t}\n\t},\n\n\n\ttriggerEvent : function (el, eventName, bubbles, cancelable) {\n\t\tif (!el) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ev = null;\n\n\t\tif (typeof Event === 'function') {\n\t\t\tev = new Event(eventName, {\n\t\t\t\tbubbles: bubbles,\n\t\t\t\tcancelable: cancelable\n\t\t\t});\n\t\t} else {\n\t\t\t// IE\n\t\t\tev = window.document.createEvent('Event');\n\t\t\tev.initEvent(eventName, bubbles, cancelable);\n\t\t}\n\n\t\tif (!ev) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// so that we know that the event was triggered internally\n\t\tjsc.setData(ev, 'internal', true);\n\n\t\tel.dispatchEvent(ev);\n\t\treturn true;\n\t},\n\n\n\ttriggerInputEvent : function (el, eventName, bubbles, cancelable) {\n\t\tif (!el) {\n\t\t\treturn;\n\t\t}\n\t\tif (jsc.isTextInput(el)) {\n\t\t\tjsc.triggerEvent(el, eventName, bubbles, cancelable);\n\t\t}\n\t},\n\n\n\teventKey : function (ev) {\n\t\tvar keys = {\n\t\t\t9: 'Tab',\n\t\t\t13: 'Enter',\n\t\t\t27: 'Escape',\n\t\t};\n\t\tif (typeof ev.code === 'string') {\n\t\t\treturn ev.code;\n\t\t} else if (ev.keyCode !== undefined && keys.hasOwnProperty(ev.keyCode)) {\n\t\t\treturn keys[ev.keyCode];\n\t\t}\n\t\treturn null;\n\t},\n\n\n\tstrList : function (str) {\n\t\tif (!str) {\n\t\t\treturn [];\n\t\t}\n\t\treturn str.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\n\t},\n\n\n\t// The className parameter (str) can only contain a single class name\n\thasClass : function (elm, className) {\n\t\tif (!className) {\n\t\t\treturn false;\n\t\t}\n\t\tif (elm.classList !== undefined) {\n\t\t\treturn elm.classList.contains(className);\n\t\t}\n\t\t// polyfill\n\t\treturn -1 != (' ' + elm.className.replace(/\\s+/g, ' ') + ' ').indexOf(' ' + className + ' ');\n\t},\n\n\n\t// The className parameter (str) can contain multiple class names separated by whitespace\n\taddClass : function (elm, className) {\n\t\tvar classNames = jsc.strList(className);\n\n\t\tif (elm.classList !== undefined) {\n\t\t\tfor (var i = 0; i < classNames.length; i += 1) {\n\t\t\t\telm.classList.add(classNames[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// polyfill\n\t\tfor (var i = 0; i < classNames.length; i += 1) {\n\t\t\tif (!jsc.hasClass(elm, classNames[i])) {\n\t\t\t\telm.className += (elm.className ? ' ' : '') + classNames[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t// The className parameter (str) can contain multiple class names separated by whitespace\n\tremoveClass : function (elm, className) {\n\t\tvar classNames = jsc.strList(className);\n\n\t\tif (elm.classList !== undefined) {\n\t\t\tfor (var i = 0; i < classNames.length; i += 1) {\n\t\t\t\telm.classList.remove(classNames[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// polyfill\n\t\tfor (var i = 0; i < classNames.length; i += 1) {\n\t\t\tvar repl = new RegExp(\n\t\t\t\t'^\\\\s*' + classNames[i] + '\\\\s*|' +\n\t\t\t\t'\\\\s*' + classNames[i] + '\\\\s*$|' +\n\t\t\t\t'\\\\s+' + classNames[i] + '(\\\\s+)',\n\t\t\t\t'g'\n\t\t\t);\n\t\t\telm.className = elm.className.replace(repl, '$1');\n\t\t}\n\t},\n\n\n\tgetCompStyle : function (elm) {\n\t\tvar compStyle = window.getComputedStyle ? window.getComputedStyle(elm) : elm.currentStyle;\n\n\t\t// Note: In Firefox, getComputedStyle returns null in a hidden iframe,\n\t\t// that's why we need to check if the returned value is non-empty\n\t\tif (!compStyle) {\n\t\t\treturn {};\n\t\t}\n\t\treturn compStyle;\n\t},\n\n\n\t// Note:\n\t//   Setting a property to NULL reverts it to the state before it was first set\n\t//   with the 'reversible' flag enabled\n\t//\n\tsetStyle : function (elm, styles, important, reversible) {\n\t\t// using '' for standard priority (IE10 apparently doesn't like value undefined)\n\t\tvar priority = important ? 'important' : '';\n\t\tvar origStyle = null;\n\n\t\tfor (var prop in styles) {\n\t\t\tif (styles.hasOwnProperty(prop)) {\n\t\t\t\tvar setVal = null;\n\n\t\t\t\tif (styles[prop] === null) {\n\t\t\t\t\t// reverting a property value\n\n\t\t\t\t\tif (!origStyle) {\n\t\t\t\t\t\t// get the original style object, but dont't try to create it if it doesn't exist\n\t\t\t\t\t\torigStyle = jsc.getData(elm, 'origStyle');\n\t\t\t\t\t}\n\t\t\t\t\tif (origStyle && origStyle.hasOwnProperty(prop)) {\n\t\t\t\t\t\t// we have property's original value -> use it\n\t\t\t\t\t\tsetVal = origStyle[prop];\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// setting a property value\n\n\t\t\t\t\tif (reversible) {\n\t\t\t\t\t\tif (!origStyle) {\n\t\t\t\t\t\t\t// get the original style object and if it doesn't exist, create it\n\t\t\t\t\t\t\torigStyle = jsc.getData(elm, 'origStyle', {});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!origStyle.hasOwnProperty(prop)) {\n\t\t\t\t\t\t\t// original property value not yet stored -> store it\n\t\t\t\t\t\t\torigStyle[prop] = elm.style[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsetVal = styles[prop];\n\t\t\t\t}\n\n\t\t\t\tif (setVal !== null) {\n\t\t\t\t\telm.style.setProperty(prop, setVal, priority);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\thexColor : function (r, g, b) {\n\t\treturn '#' + (\n\t\t\t('0' + Math.round(r).toString(16)).substr(-2) +\n\t\t\t('0' + Math.round(g).toString(16)).substr(-2) +\n\t\t\t('0' + Math.round(b).toString(16)).substr(-2)\n\t\t).toUpperCase();\n\t},\n\n\n\thexaColor : function (r, g, b, a) {\n\t\treturn '#' + (\n\t\t\t('0' + Math.round(r).toString(16)).substr(-2) +\n\t\t\t('0' + Math.round(g).toString(16)).substr(-2) +\n\t\t\t('0' + Math.round(b).toString(16)).substr(-2) +\n\t\t\t('0' + Math.round(a * 255).toString(16)).substr(-2)\n\t\t).toUpperCase();\n\t},\n\n\n\trgbColor : function (r, g, b) {\n\t\treturn 'rgb(' +\n\t\t\tMath.round(r) + ',' +\n\t\t\tMath.round(g) + ',' +\n\t\t\tMath.round(b) +\n\t\t')';\n\t},\n\n\n\trgbaColor : function (r, g, b, a) {\n\t\treturn 'rgba(' +\n\t\t\tMath.round(r) + ',' +\n\t\t\tMath.round(g) + ',' +\n\t\t\tMath.round(b) + ',' +\n\t\t\t(Math.round((a===undefined || a===null ? 1 : a) * 100) / 100) +\n\t\t')';\n\t},\n\n\n\tlinearGradient : (function () {\n\n\t\tfunction getFuncName () {\n\t\t\tvar stdName = 'linear-gradient';\n\t\t\tvar prefixes = ['', '-webkit-', '-moz-', '-o-', '-ms-'];\n\t\t\tvar helper = window.document.createElement('div');\n\n\t\t\tfor (var i = 0; i < prefixes.length; i += 1) {\n\t\t\t\tvar tryFunc = prefixes[i] + stdName;\n\t\t\t\tvar tryVal = tryFunc + '(to right, rgba(0,0,0,0), rgba(0,0,0,0))';\n\n\t\t\t\thelper.style.background = tryVal;\n\t\t\t\tif (helper.style.background) { // CSS background successfully set -> function name is supported\n\t\t\t\t\treturn tryFunc;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stdName; // fallback to standard 'linear-gradient' without vendor prefix\n\t\t}\n\n\t\tvar funcName = getFuncName();\n\n\t\treturn function () {\n\t\t\treturn funcName + '(' + Array.prototype.join.call(arguments, ', ') + ')';\n\t\t};\n\n\t})(),\n\n\n\tsetBorderRadius : function (elm, value) {\n\t\tjsc.setStyle(elm, {'border-radius' : value || '0'});\n\t},\n\n\n\tsetBoxShadow : function (elm, value) {\n\t\tjsc.setStyle(elm, {'box-shadow': value || 'none'});\n\t},\n\n\n\tgetElementPos : function (e, relativeToViewport) {\n\t\tvar x=0, y=0;\n\t\tvar rect = e.getBoundingClientRect();\n\t\tx = rect.left;\n\t\ty = rect.top;\n\t\tif (!relativeToViewport) {\n\t\t\tvar viewPos = jsc.getViewPos();\n\t\t\tx += viewPos[0];\n\t\t\ty += viewPos[1];\n\t\t}\n\t\treturn [x, y];\n\t},\n\n\n\tgetElementSize : function (e) {\n\t\treturn [e.offsetWidth, e.offsetHeight];\n\t},\n\n\n\t// get pointer's X/Y coordinates relative to viewport\n\tgetAbsPointerPos : function (e) {\n\t\tvar x = 0, y = 0;\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\n\t\t\t// touch devices\n\t\t\tx = e.changedTouches[0].clientX;\n\t\t\ty = e.changedTouches[0].clientY;\n\t\t} else if (typeof e.clientX === 'number') {\n\t\t\tx = e.clientX;\n\t\t\ty = e.clientY;\n\t\t}\n\t\treturn { x: x, y: y };\n\t},\n\n\n\t// get pointer's X/Y coordinates relative to target element\n\tgetRelPointerPos : function (e) {\n\t\tvar target = e.target || e.srcElement;\n\t\tvar targetRect = target.getBoundingClientRect();\n\n\t\tvar x = 0, y = 0;\n\n\t\tvar clientX = 0, clientY = 0;\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\n\t\t\t// touch devices\n\t\t\tclientX = e.changedTouches[0].clientX;\n\t\t\tclientY = e.changedTouches[0].clientY;\n\t\t} else if (typeof e.clientX === 'number') {\n\t\t\tclientX = e.clientX;\n\t\t\tclientY = e.clientY;\n\t\t}\n\n\t\tx = clientX - targetRect.left;\n\t\ty = clientY - targetRect.top;\n\t\treturn { x: x, y: y };\n\t},\n\n\n\tgetViewPos : function () {\n\t\tvar doc = window.document.documentElement;\n\t\treturn [\n\t\t\t(window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\n\t\t\t(window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\t\t];\n\t},\n\n\n\tgetViewSize : function () {\n\t\tvar doc = window.document.documentElement;\n\t\treturn [\n\t\t\t(window.innerWidth || doc.clientWidth),\n\t\t\t(window.innerHeight || doc.clientHeight),\n\t\t];\n\t},\n\n\n\t// r: 0-255\n\t// g: 0-255\n\t// b: 0-255\n\t//\n\t// returns: [ 0-360, 0-100, 0-100 ]\n\t//\n\tRGB_HSV : function (r, g, b) {\n\t\tr /= 255;\n\t\tg /= 255;\n\t\tb /= 255;\n\t\tvar n = Math.min(Math.min(r,g),b);\n\t\tvar v = Math.max(Math.max(r,g),b);\n\t\tvar m = v - n;\n\t\tif (m === 0) { return [ null, 0, 100 * v ]; }\n\t\tvar h = r===n ? 3+(b-g)/m : (g===n ? 5+(r-b)/m : 1+(g-r)/m);\n\t\treturn [\n\t\t\t60 * (h===6?0:h),\n\t\t\t100 * (m/v),\n\t\t\t100 * v\n\t\t];\n\t},\n\n\n\t// h: 0-360\n\t// s: 0-100\n\t// v: 0-100\n\t//\n\t// returns: [ 0-255, 0-255, 0-255 ]\n\t//\n\tHSV_RGB : function (h, s, v) {\n\t\tvar u = 255 * (v / 100);\n\n\t\tif (h === null) {\n\t\t\treturn [ u, u, u ];\n\t\t}\n\n\t\th /= 60;\n\t\ts /= 100;\n\n\t\tvar i = Math.floor(h);\n\t\tvar f = i%2 ? h-i : 1-(h-i);\n\t\tvar m = u * (1 - s);\n\t\tvar n = u * (1 - s * f);\n\t\tswitch (i) {\n\t\t\tcase 6:\n\t\t\tcase 0: return [u,n,m];\n\t\t\tcase 1: return [n,u,m];\n\t\t\tcase 2: return [m,u,n];\n\t\t\tcase 3: return [m,n,u];\n\t\t\tcase 4: return [n,m,u];\n\t\t\tcase 5: return [u,m,n];\n\t\t}\n\t},\n\n\n\tparseColorString : function (str) {\n\t\tvar ret = {\n\t\t\trgba: null,\n\t\t\tformat: null // 'hex' | 'hexa' | 'rgb' | 'rgba'\n\t\t};\n\n\t\tvar m;\n\n\t\tif (m = str.match(/^\\W*([0-9A-F]{3,8})\\W*$/i)) {\n\t\t\t// HEX notation\n\n\t\t\tif (m[1].length === 8) {\n\t\t\t\t// 8-char notation (= with alpha)\n\t\t\t\tret.format = 'hexa';\n\t\t\t\tret.rgba = [\n\t\t\t\t\tparseInt(m[1].substr(0,2),16),\n\t\t\t\t\tparseInt(m[1].substr(2,2),16),\n\t\t\t\t\tparseInt(m[1].substr(4,2),16),\n\t\t\t\t\tparseInt(m[1].substr(6,2),16) / 255\n\t\t\t\t];\n\n\t\t\t} else if (m[1].length === 6) {\n\t\t\t\t// 6-char notation\n\t\t\t\tret.format = 'hex';\n\t\t\t\tret.rgba = [\n\t\t\t\t\tparseInt(m[1].substr(0,2),16),\n\t\t\t\t\tparseInt(m[1].substr(2,2),16),\n\t\t\t\t\tparseInt(m[1].substr(4,2),16),\n\t\t\t\t\tnull\n\t\t\t\t];\n\n\t\t\t} else if (m[1].length === 3) {\n\t\t\t\t// 3-char notation\n\t\t\t\tret.format = 'hex';\n\t\t\t\tret.rgba = [\n\t\t\t\t\tparseInt(m[1].charAt(0) + m[1].charAt(0),16),\n\t\t\t\t\tparseInt(m[1].charAt(1) + m[1].charAt(1),16),\n\t\t\t\t\tparseInt(m[1].charAt(2) + m[1].charAt(2),16),\n\t\t\t\t\tnull\n\t\t\t\t];\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)) {\n\t\t\t// rgb(...) or rgba(...) notation\n\n\t\t\tvar par = m[1].split(',');\n\t\t\tvar re = /^\\s*(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)\\s*$/;\n\t\t\tvar mR, mG, mB, mA;\n\t\t\tif (\n\t\t\t\tpar.length >= 3 &&\n\t\t\t\t(mR = par[0].match(re)) &&\n\t\t\t\t(mG = par[1].match(re)) &&\n\t\t\t\t(mB = par[2].match(re))\n\t\t\t) {\n\t\t\t\tret.format = 'rgb';\n\t\t\t\tret.rgba = [\n\t\t\t\t\tparseFloat(mR[1]) || 0,\n\t\t\t\t\tparseFloat(mG[1]) || 0,\n\t\t\t\t\tparseFloat(mB[1]) || 0,\n\t\t\t\t\tnull\n\t\t\t\t];\n\n\t\t\t\tif (\n\t\t\t\t\tpar.length >= 4 &&\n\t\t\t\t\t(mA = par[3].match(re))\n\t\t\t\t) {\n\t\t\t\t\tret.format = 'rgba';\n\t\t\t\t\tret.rgba[3] = parseFloat(mA[1]) || 0;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\n\tparsePaletteValue : function (mixed) {\n\t\tvar vals = [];\n\n\t\tif (typeof mixed === 'string') { // input is a string of space separated color values\n\t\t\t// rgb() and rgba() may contain spaces too, so let's find all color values by regex\n\t\t\tmixed.replace(/#[0-9A-F]{3}([0-9A-F]{3})?|rgba?\\(([^)]*)\\)/ig, function (val) {\n\t\t\t\tvals.push(val);\n\t\t\t});\n\t\t} else if (Array.isArray(mixed)) { // input is an array of color values\n\t\t\tvals = mixed;\n\t\t}\n\n\t\t// convert all values into uniform color format\n\n\t\tvar colors = [];\n\n\t\tfor (var i = 0; i < vals.length; i++) {\n\t\t\tvar color = jsc.parseColorString(vals[i]);\n\t\t\tif (color) {\n\t\t\t\tcolors.push(color);\n\t\t\t}\n\t\t}\n\n\t\treturn colors;\n\t},\n\n\n\tcontainsTranparentColor : function (colors) {\n\t\tfor (var i = 0; i < colors.length; i++) {\n\t\t\tvar a = colors[i].rgba[3];\n\t\t\tif (a !== null && a < 1.0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\n\tisAlphaFormat : function (format) {\n\t\tswitch (format.toLowerCase()) {\n\t\tcase 'hexa':\n\t\tcase 'rgba':\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\n\t// Canvas scaling for retina displays\n\t//\n\t// adapted from https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\t//\n\tscaleCanvasForHighDPR : function (canvas) {\n\t\tvar dpr = window.devicePixelRatio || 1;\n\t\tcanvas.width *= dpr;\n\t\tcanvas.height *= dpr;\n\t\tvar ctx = canvas.getContext('2d');\n\t\tctx.scale(dpr, dpr);\n\t},\n\n\n\tgenColorPreviewCanvas : function (color, separatorPos, specWidth, scaleForHighDPR) {\n\n\t\tvar sepW = Math.round(jsc.pub.previewSeparator.length);\n\t\tvar sqSize = jsc.pub.chessboardSize;\n\t\tvar sqColor1 = jsc.pub.chessboardColor1;\n\t\tvar sqColor2 = jsc.pub.chessboardColor2;\n\n\t\tvar cWidth = specWidth ? specWidth : sqSize * 2;\n\t\tvar cHeight = sqSize * 2;\n\n\t\tvar canvas = jsc.createEl('canvas');\n\t\tvar ctx = canvas.getContext('2d');\n\n\t\tcanvas.width = cWidth;\n\t\tcanvas.height = cHeight;\n\t\tif (scaleForHighDPR) {\n\t\t\tjsc.scaleCanvasForHighDPR(canvas);\n\t\t}\n\n\t\t// transparency chessboard - background\n\t\tctx.fillStyle = sqColor1;\n\t\tctx.fillRect(0, 0, cWidth, cHeight);\n\n\t\t// transparency chessboard - squares\n\t\tctx.fillStyle = sqColor2;\n\t\tfor (var x = 0; x < cWidth; x += sqSize * 2) {\n\t\t\tctx.fillRect(x, 0, sqSize, sqSize);\n\t\t\tctx.fillRect(x + sqSize, sqSize, sqSize, sqSize);\n\t\t}\n\n\t\tif (color) {\n\t\t\t// actual color in foreground\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fillRect(0, 0, cWidth, cHeight);\n\t\t}\n\n\t\tvar start = null;\n\t\tswitch (separatorPos) {\n\t\t\tcase 'left':\n\t\t\t\tstart = 0;\n\t\t\t\tctx.clearRect(0, 0, sepW/2, cHeight);\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tstart = cWidth - sepW;\n\t\t\t\tctx.clearRect(cWidth - (sepW/2), 0, sepW/2, cHeight);\n\t\t\t\tbreak;\n\t\t}\n\t\tif (start !== null) {\n\t\t\tctx.lineWidth = 1;\n\t\t\tfor (var i = 0; i < jsc.pub.previewSeparator.length; i += 1) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.strokeStyle = jsc.pub.previewSeparator[i];\n\t\t\t\tctx.moveTo(0.5 + start + i, 0);\n\t\t\t\tctx.lineTo(0.5 + start + i, cHeight);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcanvas: canvas,\n\t\t\twidth: cWidth,\n\t\t\theight: cHeight,\n\t\t};\n\t},\n\n\n\t// if position or width is not set => fill the entire element (0%-100%)\n\tgenColorPreviewGradient : function (color, position, width) {\n\t\tvar params = [];\n\n\t\tif (position && width) {\n\t\t\tparams = [\n\t\t\t\t'to ' + {'left':'right', 'right':'left'}[position],\n\t\t\t\tcolor + ' 0%',\n\t\t\t\tcolor + ' ' + width + 'px',\n\t\t\t\t'rgba(0,0,0,0) ' + (width + 1) + 'px',\n\t\t\t\t'rgba(0,0,0,0) 100%',\n\t\t\t];\n\t\t} else {\n\t\t\tparams = [\n\t\t\t\t'to right',\n\t\t\t\tcolor + ' 0%',\n\t\t\t\tcolor + ' 100%',\n\t\t\t];\n\t\t}\n\n\t\treturn jsc.linearGradient.apply(this, params);\n\t},\n\n\n\tredrawPosition : function () {\n\n\t\tif (!jsc.picker || !jsc.picker.owner) {\n\t\t\treturn; // picker is not shown\n\t\t}\n\n\t\tvar thisObj = jsc.picker.owner;\n\n\t\tvar tp, vp;\n\n\t\tif (thisObj.fixed) {\n\t\t\t// Fixed elements are positioned relative to viewport,\n\t\t\t// therefore we can ignore the scroll offset\n\t\t\ttp = jsc.getElementPos(thisObj.targetElement, true); // target pos\n\t\t\tvp = [0, 0]; // view pos\n\t\t} else {\n\t\t\ttp = jsc.getElementPos(thisObj.targetElement); // target pos\n\t\t\tvp = jsc.getViewPos(); // view pos\n\t\t}\n\n\t\tvar ts = jsc.getElementSize(thisObj.targetElement); // target size\n\t\tvar vs = jsc.getViewSize(); // view size\n\t\tvar pd = jsc.getPickerDims(thisObj);\n\t\tvar ps = [pd.borderW, pd.borderH]; // picker outer size\n\t\tvar a, b, c;\n\t\tswitch (thisObj.position.toLowerCase()) {\n\t\t\tcase 'left': a=1; b=0; c=-1; break;\n\t\t\tcase 'right':a=1; b=0; c=1; break;\n\t\t\tcase 'top':  a=0; b=1; c=-1; break;\n\t\t\tdefault:     a=0; b=1; c=1; break;\n\t\t}\n\t\tvar l = (ts[b]+ps[b])/2;\n\n\t\t// compute picker position\n\t\tif (!thisObj.smartPosition) {\n\t\t\tvar pp = [\n\t\t\t\ttp[a],\n\t\t\t\ttp[b]+ts[b]-l+l*c\n\t\t\t];\n\t\t} else {\n\t\t\tvar pp = [\n\t\t\t\t-vp[a]+tp[a]+ps[a] > vs[a] ?\n\t\t\t\t\t(-vp[a]+tp[a]+ts[a]/2 > vs[a]/2 && tp[a]+ts[a]-ps[a] >= 0 ? tp[a]+ts[a]-ps[a] : tp[a]) :\n\t\t\t\t\ttp[a],\n\t\t\t\t-vp[b]+tp[b]+ts[b]+ps[b]-l+l*c > vs[b] ?\n\t\t\t\t\t(-vp[b]+tp[b]+ts[b]/2 > vs[b]/2 && tp[b]+ts[b]-l-l*c >= 0 ? tp[b]+ts[b]-l-l*c : tp[b]+ts[b]-l+l*c) :\n\t\t\t\t\t(tp[b]+ts[b]-l+l*c >= 0 ? tp[b]+ts[b]-l+l*c : tp[b]+ts[b]-l-l*c)\n\t\t\t];\n\t\t}\n\n\t\tvar x = pp[a];\n\t\tvar y = pp[b];\n\t\tvar positionValue = thisObj.fixed ? 'fixed' : 'absolute';\n\t\tvar contractShadow =\n\t\t\t(pp[0] + ps[0] > tp[0] || pp[0] < tp[0] + ts[0]) &&\n\t\t\t(pp[1] + ps[1] < tp[1] + ts[1]);\n\n\t\tjsc._drawPosition(thisObj, x, y, positionValue, contractShadow);\n\t},\n\n\n\t_drawPosition : function (thisObj, x, y, positionValue, contractShadow) {\n\t\tvar vShadow = contractShadow ? 0 : thisObj.shadowBlur; // px\n\n\t\tjsc.picker.wrap.style.position = positionValue;\n\t\tjsc.picker.wrap.style.left = x + 'px';\n\t\tjsc.picker.wrap.style.top = y + 'px';\n\n\t\tjsc.setBoxShadow(\n\t\t\tjsc.picker.boxS,\n\t\t\tthisObj.shadow ?\n\t\t\t\tnew jsc.BoxShadow(0, vShadow, thisObj.shadowBlur, 0, thisObj.shadowColor) :\n\t\t\t\tnull);\n\t},\n\n\n\tgetPickerDims : function (thisObj) {\n\t\tvar w = 2 * thisObj.controlBorderWidth + thisObj.width;\n\t\tvar h = 2 * thisObj.controlBorderWidth + thisObj.height;\n\n\t\tvar sliderSpace = 2 * thisObj.controlBorderWidth + 2 * jsc.getControlPadding(thisObj) + thisObj.sliderSize;\n\n\t\tif (jsc.getSliderChannel(thisObj)) {\n\t\t\tw += sliderSpace;\n\t\t}\n\t\tif (thisObj.hasAlphaChannel()) {\n\t\t\tw += sliderSpace;\n\t\t}\n\n\t\tvar pal = jsc.getPaletteDims(thisObj, w);\n\n\t\tif (pal.height) {\n\t\t\th += pal.height + thisObj.padding;\n\t\t}\n\t\tif (thisObj.closeButton) {\n\t\t\th += 2 * thisObj.controlBorderWidth + thisObj.padding + thisObj.buttonHeight;\n\t\t}\n\n\t\tvar pW = w + (2 * thisObj.padding);\n\t\tvar pH = h + (2 * thisObj.padding);\n\n\t\treturn {\n\t\t\tcontentW: w,\n\t\t\tcontentH: h,\n\t\t\tpaddedW: pW,\n\t\t\tpaddedH: pH,\n\t\t\tborderW: pW + (2 * thisObj.borderWidth),\n\t\t\tborderH: pH + (2 * thisObj.borderWidth),\n\t\t\tpalette: pal,\n\t\t};\n\t},\n\n\n\tgetPaletteDims : function (thisObj, width) {\n\t\tvar cols = 0, rows = 0, cellW = 0, cellH = 0, height = 0;\n\t\tvar sampleCount = thisObj._palette ? thisObj._palette.length : 0;\n\n\t\tif (sampleCount) {\n\t\t\tcols = thisObj.paletteCols;\n\t\t\trows = cols > 0 ? Math.ceil(sampleCount / cols) : 0;\n\n\t\t\t// color sample's dimensions (includes border)\n\t\t\tcellW = Math.max(1, Math.floor((width - ((cols - 1) * thisObj.paletteSpacing)) / cols));\n\t\t\tcellH = thisObj.paletteHeight ? Math.min(thisObj.paletteHeight, cellW) : cellW;\n\t\t}\n\n\t\tif (rows) {\n\t\t\theight =\n\t\t\t\trows * cellH +\n\t\t\t\t(rows - 1) * thisObj.paletteSpacing;\n\t\t}\n\n\t\treturn {\n\t\t\tcols: cols,\n\t\t\trows: rows,\n\t\t\tcellW: cellW,\n\t\t\tcellH: cellH,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t};\n\t},\n\n\n\tgetControlPadding : function (thisObj) {\n\t\treturn Math.max(\n\t\t\tthisObj.padding / 2,\n\t\t\t(2 * thisObj.pointerBorderWidth + thisObj.pointerThickness) - thisObj.controlBorderWidth\n\t\t);\n\t},\n\n\n\tgetPadYChannel : function (thisObj) {\n\t\tswitch (thisObj.mode.charAt(1).toLowerCase()) {\n\t\t\tcase 'v': return 'v'; break;\n\t\t}\n\t\treturn 's';\n\t},\n\n\n\tgetSliderChannel : function (thisObj) {\n\t\tif (thisObj.mode.length > 2) {\n\t\t\tswitch (thisObj.mode.charAt(2).toLowerCase()) {\n\t\t\t\tcase 's': return 's'; break;\n\t\t\t\tcase 'v': return 'v'; break;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\n\t// calls function specified in picker's property\n\ttriggerCallback : function (thisObj, prop) {\n\t\tif (!thisObj[prop]) {\n\t\t\treturn; // callback func not specified\n\t\t}\n\t\tvar callback = null;\n\n\t\tif (typeof thisObj[prop] === 'string') {\n\t\t\t// string with code\n\t\t\ttry {\n\t\t\t\tcallback = new Function (thisObj[prop]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else {\n\t\t\t// function\n\t\t\tcallback = thisObj[prop];\n\t\t}\n\n\t\tif (callback) {\n\t\t\tcallback.call(thisObj);\n\t\t}\n\t},\n\n\n\t// Triggers a color change related event(s) on all picker instances.\n\t// It is possible to specify multiple events separated with a space.\n\ttriggerGlobal : function (eventNames) {\n\t\tvar inst = jsc.getInstances();\n\t\tfor (var i = 0; i < inst.length; i += 1) {\n\t\t\tinst[i].trigger(eventNames);\n\t\t}\n\t},\n\n\n\t_pointerMoveEvent : {\n\t\tmouse: 'mousemove',\n\t\ttouch: 'touchmove'\n\t},\n\t_pointerEndEvent : {\n\t\tmouse: 'mouseup',\n\t\ttouch: 'touchend'\n\t},\n\n\n\t_pointerOrigin : null,\n\t_capturedTarget : null,\n\n\n\tonDocumentKeyUp : function (e) {\n\t\tif (['Tab', 'Escape'].indexOf(jsc.eventKey(e)) !== -1) {\n\t\t\tif (jsc.picker && jsc.picker.owner) {\n\t\t\t\tjsc.picker.owner.tryHide();\n\t\t\t}\n\t\t}\n\t},\n\n\n\tonWindowResize : function (e) {\n\t\tjsc.redrawPosition();\n\t},\n\n\n\tonWindowScroll : function (e) {\n\t\tjsc.redrawPosition();\n\t},\n\n\n\tonParentScroll : function (e) {\n\t\t// hide the picker when one of the parent elements is scrolled\n\t\tif (jsc.picker && jsc.picker.owner) {\n\t\t\tjsc.picker.owner.tryHide();\n\t\t}\n\t},\n\n\n\tonDocumentMouseDown : function (e) {\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif (target.jscolor && target.jscolor instanceof jsc.pub) { // clicked targetElement -> show picker\n\t\t\tif (target.jscolor.showOnClick && !target.disabled) {\n\t\t\t\ttarget.jscolor.show();\n\t\t\t}\n\t\t} else if (jsc.getData(target, 'gui')) { // clicked jscolor's GUI element\n\t\t\tvar control = jsc.getData(target, 'control');\n\t\t\tif (control) {\n\t\t\t\t// jscolor's control\n\t\t\t\tjsc.onControlPointerStart(e, target, jsc.getData(target, 'control'), 'mouse');\n\t\t\t}\n\t\t} else {\n\t\t\t// mouse is outside the picker's controls -> hide the color picker!\n\t\t\tif (jsc.picker && jsc.picker.owner) {\n\t\t\t\tjsc.picker.owner.tryHide();\n\t\t\t}\n\t\t}\n\t},\n\n\n\tonPickerTouchStart : function (e) {\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif (jsc.getData(target, 'control')) {\n\t\t\tjsc.onControlPointerStart(e, target, jsc.getData(target, 'control'), 'touch');\n\t\t}\n\t},\n\n\n\tonControlPointerStart : function (e, target, controlName, pointerType) {\n\t\tvar thisObj = jsc.getData(target, 'instance');\n\n\t\tjsc.preventDefault(e);\n\t\tjsc.captureTarget(target);\n\n\t\tvar registerDragEvents = function (doc, offset) {\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerMoveEvent[pointerType],\n\t\t\t\tjsc.onDocumentPointerMove(e, target, controlName, pointerType, offset));\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerEndEvent[pointerType],\n\t\t\t\tjsc.onDocumentPointerEnd(e, target, controlName, pointerType));\n\t\t};\n\n\t\tregisterDragEvents(window.document, [0, 0]);\n\n\t\tif (window.parent && window.frameElement) {\n\t\t\tvar rect = window.frameElement.getBoundingClientRect();\n\t\t\tvar ofs = [-rect.left, -rect.top];\n\t\t\tregisterDragEvents(window.parent.window.document, ofs);\n\t\t}\n\n\t\tvar abs = jsc.getAbsPointerPos(e);\n\t\tvar rel = jsc.getRelPointerPos(e);\n\t\tjsc._pointerOrigin = {\n\t\t\tx: abs.x - rel.x,\n\t\t\ty: abs.y - rel.y\n\t\t};\n\n\t\tswitch (controlName) {\n\t\tcase 'pad':\n\t\t\t// if the value slider is at the bottom, move it up\n\t\t\tif (jsc.getSliderChannel(thisObj) === 'v' && thisObj.channels.v === 0) {\n\t\t\t\tthisObj.fromHSVA(null, null, 100, null);\n\t\t\t}\n\t\t\tjsc.setPad(thisObj, e, 0, 0);\n\t\t\tbreak;\n\n\t\tcase 'sld':\n\t\t\tjsc.setSld(thisObj, e, 0);\n\t\t\tbreak;\n\n\t\tcase 'asld':\n\t\t\tjsc.setASld(thisObj, e, 0);\n\t\t\tbreak;\n\t\t}\n\t\tthisObj.trigger('input');\n\t},\n\n\n\tonDocumentPointerMove : function (e, target, controlName, pointerType, offset) {\n\t\treturn function (e) {\n\t\t\tvar thisObj = jsc.getData(target, 'instance');\n\t\t\tswitch (controlName) {\n\t\t\tcase 'pad':\n\t\t\t\tjsc.setPad(thisObj, e, offset[0], offset[1]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'sld':\n\t\t\t\tjsc.setSld(thisObj, e, offset[1]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'asld':\n\t\t\t\tjsc.setASld(thisObj, e, offset[1]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthisObj.trigger('input');\n\t\t}\n\t},\n\n\n\tonDocumentPointerEnd : function (e, target, controlName, pointerType) {\n\t\treturn function (e) {\n\t\t\tvar thisObj = jsc.getData(target, 'instance');\n\t\t\tjsc.detachGroupEvents('drag');\n\t\t\tjsc.releaseTarget();\n\n\t\t\t// Always trigger changes AFTER detaching outstanding mouse handlers,\n\t\t\t// in case some color change that occured in user-defined onChange/onInput handler\n\t\t\t// intruded into current mouse events\n\t\t\tthisObj.trigger('input');\n\t\t\tthisObj.trigger('change');\n\t\t};\n\t},\n\n\n\tonPaletteSampleClick : function (e) {\n\t\tvar target = e.currentTarget;\n\t\tvar thisObj = jsc.getData(target, 'instance');\n\t\tvar color = jsc.getData(target, 'color');\n\n\t\t// when format is flexible, use the original format of this color sample\n\t\tif (thisObj.format.toLowerCase() === 'any') {\n\t\t\tthisObj._setFormat(color.format); // adapt format\n\t\t\tif (!jsc.isAlphaFormat(thisObj.getFormat())) {\n\t\t\t\tcolor.rgba[3] = 1.0; // when switching to a format that doesn't support alpha, set full opacity\n\t\t\t}\n\t\t}\n\n\t\t// if this color doesn't specify alpha, use alpha of 1.0 (if applicable)\n\t\tif (color.rgba[3] === null) {\n\t\t\tif (thisObj.paletteSetsAlpha === true || (thisObj.paletteSetsAlpha === 'auto' && thisObj._paletteHasTransparency)) {\n\t\t\t\tcolor.rgba[3] = 1.0;\n\t\t\t}\n\t\t}\n\n\t\tthisObj.fromRGBA.apply(thisObj, color.rgba);\n\n\t\tthisObj.trigger('input');\n\t\tthisObj.trigger('change');\n\n\t\tif (thisObj.hideOnPaletteClick) {\n\t\t\tthisObj.hide();\n\t\t}\n\t},\n\n\n\tsetPad : function (thisObj, e, ofsX, ofsY) {\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\n\t\tvar x = ofsX + pointerAbs.x - jsc._pointerOrigin.x - thisObj.padding - thisObj.controlBorderWidth;\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\n\n\t\tvar xVal = x * (360 / (thisObj.width - 1));\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\n\n\t\tswitch (jsc.getPadYChannel(thisObj)) {\n\t\tcase 's': thisObj.fromHSVA(xVal, yVal, null, null); break;\n\t\tcase 'v': thisObj.fromHSVA(xVal, null, yVal, null); break;\n\t\t}\n\t},\n\n\n\tsetSld : function (thisObj, e, ofsY) {\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\n\n\t\tswitch (jsc.getSliderChannel(thisObj)) {\n\t\tcase 's': thisObj.fromHSVA(null, yVal, null, null); break;\n\t\tcase 'v': thisObj.fromHSVA(null, null, yVal, null); break;\n\t\t}\n\t},\n\n\n\tsetASld : function (thisObj, e, ofsY) {\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\n\t\tvar yVal = 1.0 - (y * (1.0 / (thisObj.height - 1)));\n\n\t\tif (yVal < 1.0) {\n\t\t\t// if format is flexible and the current format doesn't support alpha, switch to a suitable one\n\t\t\tvar fmt = thisObj.getFormat();\n\t\t\tif (thisObj.format.toLowerCase() === 'any' && !jsc.isAlphaFormat(fmt)) {\n\t\t\t\tthisObj._setFormat(fmt === 'hex' ? 'hexa' : 'rgba');\n\t\t\t}\n\t\t}\n\n\t\tthisObj.fromHSVA(null, null, null, yVal);\n\t},\n\n\n\tcreatePadCanvas : function () {\n\n\t\tvar ret = {\n\t\t\telm: null,\n\t\t\tdraw: null\n\t\t};\n\n\t\tvar canvas = jsc.createEl('canvas');\n\t\tvar ctx = canvas.getContext('2d');\n\n\t\tvar drawFunc = function (width, height, type) {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tvar hGrad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n\t\t\thGrad.addColorStop(0 / 6, '#F00');\n\t\t\thGrad.addColorStop(1 / 6, '#FF0');\n\t\t\thGrad.addColorStop(2 / 6, '#0F0');\n\t\t\thGrad.addColorStop(3 / 6, '#0FF');\n\t\t\thGrad.addColorStop(4 / 6, '#00F');\n\t\t\thGrad.addColorStop(5 / 6, '#F0F');\n\t\t\thGrad.addColorStop(6 / 6, '#F00');\n\n\t\t\tctx.fillStyle = hGrad;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tvar vGrad = ctx.createLinearGradient(0, 0, 0, canvas.height);\n\t\t\tswitch (type.toLowerCase()) {\n\t\t\tcase 's':\n\t\t\t\tvGrad.addColorStop(0, 'rgba(255,255,255,0)');\n\t\t\t\tvGrad.addColorStop(1, 'rgba(255,255,255,1)');\n\t\t\t\tbreak;\n\t\t\tcase 'v':\n\t\t\t\tvGrad.addColorStop(0, 'rgba(0,0,0,0)');\n\t\t\t\tvGrad.addColorStop(1, 'rgba(0,0,0,1)');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tctx.fillStyle = vGrad;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\tret.elm = canvas;\n\t\tret.draw = drawFunc;\n\n\t\treturn ret;\n\t},\n\n\n\tcreateSliderGradient : function () {\n\n\t\tvar ret = {\n\t\t\telm: null,\n\t\t\tdraw: null\n\t\t};\n\n\t\tvar canvas = jsc.createEl('canvas');\n\t\tvar ctx = canvas.getContext('2d');\n\n\t\tvar drawFunc = function (width, height, color1, color2) {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tvar grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\n\t\t\tgrad.addColorStop(0, color1);\n\t\t\tgrad.addColorStop(1, color2);\n\n\t\t\tctx.fillStyle = grad;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\tret.elm = canvas;\n\t\tret.draw = drawFunc;\n\n\t\treturn ret;\n\t},\n\n\n\tcreateASliderGradient : function () {\n\n\t\tvar ret = {\n\t\t\telm: null,\n\t\t\tdraw: null\n\t\t};\n\n\t\tvar canvas = jsc.createEl('canvas');\n\t\tvar ctx = canvas.getContext('2d');\n\n\t\tvar drawFunc = function (width, height, color) {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tvar sqSize = canvas.width / 2;\n\t\t\tvar sqColor1 = jsc.pub.chessboardColor1;\n\t\t\tvar sqColor2 = jsc.pub.chessboardColor2;\n\n\t\t\t// dark gray background\n\t\t\tctx.fillStyle = sqColor1;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t\tif (sqSize > 0) { // to avoid infinite loop\n\t\t\t\tfor (var y = 0; y < canvas.height; y += sqSize * 2) {\n\t\t\t\t\t// light gray squares\n\t\t\t\t\tctx.fillStyle = sqColor2;\n\t\t\t\t\tctx.fillRect(0, y, sqSize, sqSize);\n\t\t\t\t\tctx.fillRect(sqSize, y + sqSize, sqSize, sqSize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\n\t\t\tgrad.addColorStop(0, color);\n\t\t\tgrad.addColorStop(1, 'rgba(0,0,0,0)');\n\n\t\t\tctx.fillStyle = grad;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\tret.elm = canvas;\n\t\tret.draw = drawFunc;\n\n\t\treturn ret;\n\t},\n\n\n\tBoxShadow : (function () {\n\t\tvar BoxShadow = function (hShadow, vShadow, blur, spread, color, inset) {\n\t\t\tthis.hShadow = hShadow;\n\t\t\tthis.vShadow = vShadow;\n\t\t\tthis.blur = blur;\n\t\t\tthis.spread = spread;\n\t\t\tthis.color = color;\n\t\t\tthis.inset = !!inset;\n\t\t};\n\n\t\tBoxShadow.prototype.toString = function () {\n\t\t\tvar vals = [\n\t\t\t\tMath.round(this.hShadow) + 'px',\n\t\t\t\tMath.round(this.vShadow) + 'px',\n\t\t\t\tMath.round(this.blur) + 'px',\n\t\t\t\tMath.round(this.spread) + 'px',\n\t\t\t\tthis.color\n\t\t\t];\n\t\t\tif (this.inset) {\n\t\t\t\tvals.push('inset');\n\t\t\t}\n\t\t\treturn vals.join(' ');\n\t\t};\n\n\t\treturn BoxShadow;\n\t})(),\n\n\n\tflags : {\n\t\tleaveValue : 1 << 0,\n\t\tleaveAlpha : 1 << 1,\n\t\tleavePreview : 1 << 2,\n\t},\n\n\n\tenumOpts : {\n\t\tformat: ['auto', 'any', 'hex', 'hexa', 'rgb', 'rgba'],\n\t\tpreviewPosition: ['left', 'right'],\n\t\tmode: ['hsv', 'hvs', 'hs', 'hv'],\n\t\tposition: ['left', 'right', 'top', 'bottom'],\n\t\talphaChannel: ['auto', true, false],\n\t\tpaletteSetsAlpha: ['auto', true, false],\n\t},\n\n\n\tdeprecatedOpts : {\n\t\t// <old_option>: <new_option>  (<new_option> can be null)\n\t\t'styleElement': 'previewElement',\n\t\t'onFineChange': 'onInput',\n\t\t'overwriteImportant': 'forceStyle',\n\t\t'closable': 'closeButton',\n\t\t'insetWidth': 'controlBorderWidth',\n\t\t'insetColor': 'controlBorderColor',\n\t\t'refine': null,\n\t},\n\n\n\tdocsRef : ' ' + 'See https://jscolor.com/docs/',\n\n\n\t//\n\t// Usage:\n\t// var myPicker = new JSColor(<targetElement> [, <options>])\n\t//\n\t// (constructor is accessible via both 'jscolor' and 'JSColor' name)\n\t//\n\n\tpub : function (targetElement, opts) {\n\n\t\tvar THIS = this;\n\n\t\tif (!opts) {\n\t\t\topts = {};\n\t\t}\n\n\t\tthis.channels = {\n\t\t\tr: 255, // red [0-255]\n\t\t\tg: 255, // green [0-255]\n\t\t\tb: 255, // blue [0-255]\n\t\t\th: 0, // hue [0-360]\n\t\t\ts: 0, // saturation [0-100]\n\t\t\tv: 100, // value (brightness) [0-100]\n\t\t\ta: 1.0, // alpha (opacity) [0.0 - 1.0]\n\t\t};\n\n\t\t// General options\n\t\t//\n\t\tthis.format = 'auto'; // 'auto' | 'any' | 'hex' | 'hexa' | 'rgb' | 'rgba' - Format of the input/output value\n\t\tthis.value = undefined; // INITIAL color value in any supported format. To change it later, use method fromString(), fromHSVA(), fromRGBA() or channel()\n\t\tthis.alpha = undefined; // INITIAL alpha value. To change it later, call method channel('A', <value>)\n\t\tthis.random = false; // whether to randomize the initial color. Either true | false, or an array of ranges: [minV, maxV, minS, maxS, minH, maxH, minA, maxA]\n\t\tthis.onChange = undefined; // called when color changes. Value can be either a function or a string with JS code.\n\t\tthis.onInput = undefined; // called repeatedly as the color is being changed, e.g. while dragging a slider. Value can be either a function or a string with JS code.\n\t\tthis.valueElement = undefined; // element that will be used to display and input the color value\n\t\tthis.alphaElement = undefined; // element that will be used to display and input the alpha (opacity) value\n\t\tthis.previewElement = undefined; // element that will preview the picked color using CSS background\n\t\tthis.previewPosition = 'left'; // 'left' | 'right' - position of the color preview in previewElement\n\t\tthis.previewSize = 32; // (px) width of the color preview displayed in previewElement\n\t\tthis.previewPadding = 8; // (px) space between color preview and content of the previewElement\n\t\tthis.required = true; // whether the associated text input must always contain a color value. If false, the input can be left empty.\n\t\tthis.hash = true; // whether to prefix the HEX color code with # symbol (only applicable for HEX format)\n\t\tthis.uppercase = true; // whether to show the HEX color code in upper case (only applicable for HEX format)\n\t\tthis.forceStyle = true; // whether to overwrite CSS style of the previewElement using !important flag\n\n\t\t// Color Picker options\n\t\t//\n\t\tthis.width = 181; // width of the color spectrum (in px)\n\t\tthis.height = 101; // height of the color spectrum (in px)\n\t\tthis.mode = 'HSV'; // 'HSV' | 'HVS' | 'HS' | 'HV' - layout of the color picker controls\n\t\tthis.alphaChannel = 'auto'; // 'auto' | true | false - if alpha channel is enabled, the alpha slider will be visible. If 'auto', it will be determined according to color format\n\t\tthis.position = 'bottom'; // 'left' | 'right' | 'top' | 'bottom' - position relative to the target element\n\t\tthis.smartPosition = true; // automatically change picker position when there is not enough space for it\n\t\tthis.showOnClick = true; // whether to show the picker when user clicks its target element\n\t\tthis.hideOnLeave = true; // whether to automatically hide the picker when user leaves its target element (e.g. upon clicking the document)\n\t\tthis.palette = []; // colors to be displayed in the palette, specified as an array or a string of space separated color values (in any supported format)\n\t\tthis.paletteCols = 10; // number of columns in the palette\n\t\tthis.paletteSetsAlpha = 'auto'; // 'auto' | true | false - if true, palette colors that don't specify alpha will set alpha to 1.0\n\t\tthis.paletteHeight = 16; // maximum height (px) of a row in the palette\n\t\tthis.paletteSpacing = 4; // distance (px) between color samples in the palette\n\t\tthis.hideOnPaletteClick = false; // when set to true, clicking the palette will also hide the color picker\n\t\tthis.sliderSize = 16; // px\n\t\tthis.crossSize = 8; // px\n\t\tthis.closeButton = false; // whether to display the Close button\n\t\tthis.closeText = 'Close';\n\t\tthis.buttonColor = 'rgba(0,0,0,1)'; // CSS color\n\t\tthis.buttonHeight = 18; // px\n\t\tthis.padding = 12; // px\n\t\tthis.backgroundColor = 'rgba(255,255,255,1)'; // CSS color\n\t\tthis.borderWidth = 1; // px\n\t\tthis.borderColor = 'rgba(187,187,187,1)'; // CSS color\n\t\tthis.borderRadius = 8; // px\n\t\tthis.controlBorderWidth = 1; // px\n\t\tthis.controlBorderColor = 'rgba(187,187,187,1)'; // CSS color\n\t\tthis.shadow = true; // whether to display a shadow\n\t\tthis.shadowBlur = 15; // px\n\t\tthis.shadowColor = 'rgba(0,0,0,0.2)'; // CSS color\n\t\tthis.pointerColor = 'rgba(76,76,76,1)'; // CSS color\n\t\tthis.pointerBorderWidth = 1; // px\n\t\tthis.pointerBorderColor = 'rgba(255,255,255,1)'; // CSS color\n\t\tthis.pointerThickness = 2; // px\n\t\tthis.zIndex = 5000;\n\t\tthis.container = undefined; // where to append the color picker (BODY element by default)\n\n\t\t// Experimental\n\t\t//\n\t\tthis.minS = 0; // min allowed saturation (0 - 100)\n\t\tthis.maxS = 100; // max allowed saturation (0 - 100)\n\t\tthis.minV = 0; // min allowed value (brightness) (0 - 100)\n\t\tthis.maxV = 100; // max allowed value (brightness) (0 - 100)\n\t\tthis.minA = 0.0; // min allowed alpha (opacity) (0.0 - 1.0)\n\t\tthis.maxA = 1.0; // max allowed alpha (opacity) (0.0 - 1.0)\n\n\n\t\t// Getter: option(name)\n\t\t// Setter: option(name, value)\n\t\t//         option({name:value, ...})\n\t\t//\n\t\tthis.option = function () {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthrow new Error('No option specified');\n\t\t\t}\n\n\t\t\tif (arguments.length === 1 && typeof arguments[0] === 'string') {\n\t\t\t\t// getting a single option\n\t\t\t\ttry {\n\t\t\t\t\treturn getOption(arguments[0]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(e);\n\t\t\t\t}\n\t\t\t\treturn false;\n\n\t\t\t} else if (arguments.length >= 2 && typeof arguments[0] === 'string') {\n\t\t\t\t// setting a single option\n\t\t\t\ttry {\n\t\t\t\t\tif (!setOption(arguments[0], arguments[1])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\n\t\t\t\tthis.exposeColor(); // in case some preview-related or format-related option was changed\n\t\t\t\treturn true;\n\n\t\t\t} else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t\t\t\t// setting multiple options\n\t\t\t\tvar opts = arguments[0];\n\t\t\t\tvar success = true;\n\t\t\t\tfor (var opt in opts) {\n\t\t\t\t\tif (opts.hasOwnProperty(opt)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!setOption(opt, opts[opt])) {\n\t\t\t\t\t\t\t\tsuccess = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\t\t\tsuccess = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\n\t\t\t\tthis.exposeColor(); // in case some preview-related or format-related option was changed\n\t\t\t\treturn success;\n\t\t\t}\n\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\n\t\t// Getter: channel(name)\n\t\t// Setter: channel(name, value)\n\t\t//\n\t\tthis.channel = function (name, value) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Invalid value for channel name: ' + name);\n\t\t\t}\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// getting channel value\n\t\t\t\tif (!this.channels.hasOwnProperty(name.toLowerCase())) {\n\t\t\t\t\tconsole.warn('Getting unknown channel: ' + name);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn this.channels[name.toLowerCase()];\n\n\t\t\t} else {\n\t\t\t\t// setting channel value\n\t\t\t\tvar res = false;\n\t\t\t\tswitch (name.toLowerCase()) {\n\t\t\t\t\tcase 'r': res = this.fromRGBA(value, null, null, null); break;\n\t\t\t\t\tcase 'g': res = this.fromRGBA(null, value, null, null); break;\n\t\t\t\t\tcase 'b': res = this.fromRGBA(null, null, value, null); break;\n\t\t\t\t\tcase 'h': res = this.fromHSVA(value, null, null, null); break;\n\t\t\t\t\tcase 's': res = this.fromHSVA(null, value, null, null); break;\n\t\t\t\t\tcase 'v': res = this.fromHSVA(null, null, value, null); break;\n\t\t\t\t\tcase 'a': res = this.fromHSVA(null, null, null, value); break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('Setting unknown channel: ' + name);\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\n\t\t// Triggers given input event(s) by:\n\t\t// - executing on<Event> callback specified as picker's option\n\t\t// - triggering standard DOM event listeners attached to the value element\n\t\t//\n\t\t// It is possible to specify multiple events separated with a space.\n\t\t//\n\t\tthis.trigger = function (eventNames) {\n\t\t\tvar evs = jsc.strList(eventNames);\n\t\t\tfor (var i = 0; i < evs.length; i += 1) {\n\t\t\t\tvar ev = evs[i].toLowerCase();\n\n\t\t\t\t// trigger a callback\n\t\t\t\tvar callbackProp = null;\n\t\t\t\tswitch (ev) {\n\t\t\t\t\tcase 'input': callbackProp = 'onInput'; break;\n\t\t\t\t\tcase 'change': callbackProp = 'onChange'; break;\n\t\t\t\t}\n\t\t\t\tif (callbackProp) {\n\t\t\t\t\tjsc.triggerCallback(this, callbackProp);\n\t\t\t\t}\n\n\t\t\t\t// trigger standard DOM event listeners on the value element\n\t\t\t\tjsc.triggerInputEvent(this.valueElement, ev, true, true);\n\t\t\t}\n\t\t};\n\n\n\t\t// h: 0-360\n\t\t// s: 0-100\n\t\t// v: 0-100\n\t\t// a: 0.0-1.0\n\t\t//\n\t\tthis.fromHSVA = function (h, s, v, a, flags) { // null = don't change\n\t\t\tif (h === undefined) { h = null; }\n\t\t\tif (s === undefined) { s = null; }\n\t\t\tif (v === undefined) { v = null; }\n\t\t\tif (a === undefined) { a = null; }\n\n\t\t\tif (h !== null) {\n\t\t\t\tif (isNaN(h)) { return false; }\n\t\t\t\tthis.channels.h = Math.max(0, Math.min(360, h));\n\t\t\t}\n\t\t\tif (s !== null) {\n\t\t\t\tif (isNaN(s)) { return false; }\n\t\t\t\tthis.channels.s = Math.max(0, Math.min(100, this.maxS, s), this.minS);\n\t\t\t}\n\t\t\tif (v !== null) {\n\t\t\t\tif (isNaN(v)) { return false; }\n\t\t\t\tthis.channels.v = Math.max(0, Math.min(100, this.maxV, v), this.minV);\n\t\t\t}\n\t\t\tif (a !== null) {\n\t\t\t\tif (isNaN(a)) { return false; }\n\t\t\t\tthis.channels.a = this.hasAlphaChannel() ?\n\t\t\t\t\tMath.max(0, Math.min(1, this.maxA, a), this.minA) :\n\t\t\t\t\t1.0; // if alpha channel is disabled, the color should stay 100% opaque\n\t\t\t}\n\n\t\t\tvar rgb = jsc.HSV_RGB(\n\t\t\t\tthis.channels.h,\n\t\t\t\tthis.channels.s,\n\t\t\t\tthis.channels.v\n\t\t\t);\n\t\t\tthis.channels.r = rgb[0];\n\t\t\tthis.channels.g = rgb[1];\n\t\t\tthis.channels.b = rgb[2];\n\n\t\t\tthis.exposeColor(flags);\n\t\t\treturn true;\n\t\t};\n\n\n\t\t// r: 0-255\n\t\t// g: 0-255\n\t\t// b: 0-255\n\t\t// a: 0.0-1.0\n\t\t//\n\t\tthis.fromRGBA = function (r, g, b, a, flags) { // null = don't change\n\t\t\tif (r === undefined) { r = null; }\n\t\t\tif (g === undefined) { g = null; }\n\t\t\tif (b === undefined) { b = null; }\n\t\t\tif (a === undefined) { a = null; }\n\n\t\t\tif (r !== null) {\n\t\t\t\tif (isNaN(r)) { return false; }\n\t\t\t\tr = Math.max(0, Math.min(255, r));\n\t\t\t}\n\t\t\tif (g !== null) {\n\t\t\t\tif (isNaN(g)) { return false; }\n\t\t\t\tg = Math.max(0, Math.min(255, g));\n\t\t\t}\n\t\t\tif (b !== null) {\n\t\t\t\tif (isNaN(b)) { return false; }\n\t\t\t\tb = Math.max(0, Math.min(255, b));\n\t\t\t}\n\t\t\tif (a !== null) {\n\t\t\t\tif (isNaN(a)) { return false; }\n\t\t\t\tthis.channels.a = this.hasAlphaChannel() ?\n\t\t\t\t\tMath.max(0, Math.min(1, this.maxA, a), this.minA) :\n\t\t\t\t\t1.0; // if alpha channel is disabled, the color should stay 100% opaque\n\t\t\t}\n\n\t\t\tvar hsv = jsc.RGB_HSV(\n\t\t\t\tr===null ? this.channels.r : r,\n\t\t\t\tg===null ? this.channels.g : g,\n\t\t\t\tb===null ? this.channels.b : b\n\t\t\t);\n\t\t\tif (hsv[0] !== null) {\n\t\t\t\tthis.channels.h = Math.max(0, Math.min(360, hsv[0]));\n\t\t\t}\n\t\t\tif (hsv[2] !== 0) { // fully black color stays black through entire saturation range, so let's not change saturation\n\t\t\t\tthis.channels.s = Math.max(0, this.minS, Math.min(100, this.maxS, hsv[1]));\n\t\t\t}\n\t\t\tthis.channels.v = Math.max(0, this.minV, Math.min(100, this.maxV, hsv[2]));\n\n\t\t\t// update RGB according to final HSV, as some values might be trimmed\n\t\t\tvar rgb = jsc.HSV_RGB(this.channels.h, this.channels.s, this.channels.v);\n\t\t\tthis.channels.r = rgb[0];\n\t\t\tthis.channels.g = rgb[1];\n\t\t\tthis.channels.b = rgb[2];\n\n\t\t\tthis.exposeColor(flags);\n\t\t\treturn true;\n\t\t};\n\n\n\t\t// DEPRECATED. Use .fromHSVA() instead\n\t\t//\n\t\tthis.fromHSV = function (h, s, v, flags) {\n\t\t\tconsole.warn('fromHSV() method is DEPRECATED. Using fromHSVA() instead.' + jsc.docsRef);\n\t\t\treturn this.fromHSVA(h, s, v, null, flags);\n\t\t};\n\n\n\t\t// DEPRECATED. Use .fromRGBA() instead\n\t\t//\n\t\tthis.fromRGB = function (r, g, b, flags) {\n\t\t\tconsole.warn('fromRGB() method is DEPRECATED. Using fromRGBA() instead.' + jsc.docsRef);\n\t\t\treturn this.fromRGBA(r, g, b, null, flags);\n\t\t};\n\n\n\t\tthis.fromString = function (str, flags) {\n\t\t\tif (!this.required && str.trim() === '') {\n\t\t\t\t// setting empty string to an optional color input\n\t\t\t\tthis.setPreviewElementBg(null);\n\t\t\t\tthis.setValueElementValue('');\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar color = jsc.parseColorString(str);\n\t\t\tif (!color) {\n\t\t\t\treturn false; // could not parse\n\t\t\t}\n\t\t\tif (this.format.toLowerCase() === 'any') {\n\t\t\t\tthis._setFormat(color.format); // adapt format\n\t\t\t\tif (!jsc.isAlphaFormat(this.getFormat())) {\n\t\t\t\t\tcolor.rgba[3] = 1.0; // when switching to a format that doesn't support alpha, set full opacity\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.fromRGBA(\n\t\t\t\tcolor.rgba[0],\n\t\t\t\tcolor.rgba[1],\n\t\t\t\tcolor.rgba[2],\n\t\t\t\tcolor.rgba[3],\n\t\t\t\tflags\n\t\t\t);\n\t\t\treturn true;\n\t\t};\n\n\n\t\tthis.randomize = function (minV, maxV, minS, maxS, minH, maxH, minA, maxA) {\n\t\t\tif (minV === undefined) { minV = 0; }\n\t\t\tif (maxV === undefined) { maxV = 100; }\n\t\t\tif (minS === undefined) { minS = 0; }\n\t\t\tif (maxS === undefined) { maxS = 100; }\n\t\t\tif (minH === undefined) { minH = 0; }\n\t\t\tif (maxH === undefined) { maxH = 359; }\n\t\t\tif (minA === undefined) { minA = 1; }\n\t\t\tif (maxA === undefined) { maxA = 1; }\n\n\t\t\tthis.fromHSVA(\n\t\t\t\tminH + Math.floor(Math.random() * (maxH - minH + 1)),\n\t\t\t\tminS + Math.floor(Math.random() * (maxS - minS + 1)),\n\t\t\t\tminV + Math.floor(Math.random() * (maxV - minV + 1)),\n\t\t\t\t((100 * minA) + Math.floor(Math.random() * (100 * (maxA - minA) + 1))) / 100\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toString = function (format) {\n\t\t\tif (format === undefined) {\n\t\t\t\tformat = this.getFormat(); // format not specified -> use the current format\n\t\t\t}\n\t\t\tswitch (format.toLowerCase()) {\n\t\t\t\tcase 'hex': return this.toHEXString(); break;\n\t\t\t\tcase 'hexa': return this.toHEXAString(); break;\n\t\t\t\tcase 'rgb': return this.toRGBString(); break;\n\t\t\t\tcase 'rgba': return this.toRGBAString(); break;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n\t\tthis.toHEXString = function () {\n\t\t\treturn jsc.hexColor(\n\t\t\t\tthis.channels.r,\n\t\t\t\tthis.channels.g,\n\t\t\t\tthis.channels.b\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toHEXAString = function () {\n\t\t\treturn jsc.hexaColor(\n\t\t\t\tthis.channels.r,\n\t\t\t\tthis.channels.g,\n\t\t\t\tthis.channels.b,\n\t\t\t\tthis.channels.a\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toRGBString = function () {\n\t\t\treturn jsc.rgbColor(\n\t\t\t\tthis.channels.r,\n\t\t\t\tthis.channels.g,\n\t\t\t\tthis.channels.b\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toRGBAString = function () {\n\t\t\treturn jsc.rgbaColor(\n\t\t\t\tthis.channels.r,\n\t\t\t\tthis.channels.g,\n\t\t\t\tthis.channels.b,\n\t\t\t\tthis.channels.a\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toGrayscale = function () {\n\t\t\treturn (\n\t\t\t\t0.213 * this.channels.r +\n\t\t\t\t0.715 * this.channels.g +\n\t\t\t\t0.072 * this.channels.b\n\t\t\t);\n\t\t};\n\n\n\t\tthis.toCanvas = function () {\n\t\t\treturn jsc.genColorPreviewCanvas(this.toRGBAString()).canvas;\n\t\t};\n\n\n\t\tthis.toDataURL = function () {\n\t\t\treturn this.toCanvas().toDataURL();\n\t\t};\n\n\n\t\tthis.toBackground = function () {\n\t\t\treturn jsc.pub.background(this.toRGBAString());\n\t\t};\n\n\n\t\tthis.isLight = function () {\n\t\t\treturn this.toGrayscale() > 255 / 2;\n\t\t};\n\n\n\t\tthis.hide = function () {\n\t\t\tif (isPickerOwner()) {\n\t\t\t\tdetachPicker();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.show = function () {\n\t\t\tdrawPicker();\n\t\t};\n\n\n\t\tthis.redraw = function () {\n\t\t\tif (isPickerOwner()) {\n\t\t\t\tdrawPicker();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.getFormat = function () {\n\t\t\treturn this._currentFormat;\n\t\t};\n\n\n\t\tthis._setFormat = function (format) {\n\t\t\tthis._currentFormat = format.toLowerCase();\n\t\t};\n\n\n\t\tthis.hasAlphaChannel = function () {\n\t\t\tif (this.alphaChannel === 'auto') {\n\t\t\t\treturn (\n\t\t\t\t\tthis.format.toLowerCase() === 'any' || // format can change on the fly (e.g. from hex to rgba), so let's consider the alpha channel enabled\n\t\t\t\t\tjsc.isAlphaFormat(this.getFormat()) || // the current format supports alpha channel\n\t\t\t\t\tthis.alpha !== undefined || // initial alpha value is set, so we're working with alpha channel\n\t\t\t\t\tthis.alphaElement !== undefined // the alpha value is redirected, so we're working with alpha channel\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.alphaChannel; // the alpha channel is explicitly set\n\t\t};\n\n\n\t\tthis.processValueInput = function (str) {\n\t\t\tif (!this.fromString(str)) {\n\t\t\t\t// could not parse the color value - let's just expose the current color\n\t\t\t\tthis.exposeColor();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.processAlphaInput = function (str) {\n\t\t\tif (!this.fromHSVA(null, null, null, parseFloat(str))) {\n\t\t\t\t// could not parse the alpha value - let's just expose the current color\n\t\t\t\tthis.exposeColor();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.exposeColor = function (flags) {\n\t\t\tvar colorStr = this.toString();\n\t\t\tvar fmt = this.getFormat();\n\n\t\t\t// reflect current color in data- attribute\n\t\t\tjsc.setDataAttr(this.targetElement, 'current-color', colorStr);\n\n\t\t\tif (!(flags & jsc.flags.leaveValue) && this.valueElement) {\n\t\t\t\tif (fmt === 'hex' || fmt === 'hexa') {\n\t\t\t\t\tif (!this.uppercase) { colorStr = colorStr.toLowerCase(); }\n\t\t\t\t\tif (!this.hash) { colorStr = colorStr.replace(/^#/, ''); }\n\t\t\t\t}\n\t\t\t\tthis.setValueElementValue(colorStr);\n\t\t\t}\n\n\t\t\tif (!(flags & jsc.flags.leaveAlpha) && this.alphaElement) {\n\t\t\t\tvar alphaVal = Math.round(this.channels.a * 100) / 100;\n\t\t\t\tthis.setAlphaElementValue(alphaVal);\n\t\t\t}\n\n\t\t\tif (!(flags & jsc.flags.leavePreview) && this.previewElement) {\n\t\t\t\tvar previewPos = null; // 'left' | 'right' (null -> fill the entire element)\n\n\t\t\t\tif (\n\t\t\t\t\tjsc.isTextInput(this.previewElement) || // text input\n\t\t\t\t\t(jsc.isButton(this.previewElement) && !jsc.isButtonEmpty(this.previewElement)) // button with text\n\t\t\t\t) {\n\t\t\t\t\tpreviewPos = this.previewPosition;\n\t\t\t\t}\n\n\t\t\t\tthis.setPreviewElementBg(this.toRGBAString());\n\t\t\t}\n\n\t\t\tif (isPickerOwner()) {\n\t\t\t\tredrawPad();\n\t\t\t\tredrawSld();\n\t\t\t\tredrawASld();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.setPreviewElementBg = function (color) {\n\t\t\tif (!this.previewElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar position = null; // color preview position:  null | 'left' | 'right'\n\t\t\tvar width = null; // color preview width:  px | null = fill the entire element\n\t\t\tif (\n\t\t\t\tjsc.isTextInput(this.previewElement) || // text input\n\t\t\t\t(jsc.isButton(this.previewElement) && !jsc.isButtonEmpty(this.previewElement)) // button with text\n\t\t\t) {\n\t\t\t\tposition = this.previewPosition;\n\t\t\t\twidth = this.previewSize;\n\t\t\t}\n\n\t\t\tvar backgrounds = [];\n\n\t\t\tif (!color) {\n\t\t\t\t// there is no color preview to display -> let's remove any previous background image\n\t\t\t\tbackgrounds.push({\n\t\t\t\t\timage: 'none',\n\t\t\t\t\tposition: 'left top',\n\t\t\t\t\tsize: 'auto',\n\t\t\t\t\trepeat: 'no-repeat',\n\t\t\t\t\torigin: 'padding-box',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// CSS gradient for background color preview\n\t\t\t\tbackgrounds.push({\n\t\t\t\t\timage: jsc.genColorPreviewGradient(\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\twidth ? width - jsc.pub.previewSeparator.length : null\n\t\t\t\t\t),\n\t\t\t\t\tposition: 'left top',\n\t\t\t\t\tsize: 'auto',\n\t\t\t\t\trepeat: position ? 'repeat-y' : 'repeat',\n\t\t\t\t\torigin: 'padding-box',\n\t\t\t\t});\n\n\t\t\t\t// data URL of generated PNG image with a gray transparency chessboard\n\t\t\t\tvar preview = jsc.genColorPreviewCanvas(\n\t\t\t\t\t'rgba(0,0,0,0)',\n\t\t\t\t\tposition ? {'left':'right', 'right':'left'}[position] : null,\n\t\t\t\t\twidth,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\tbackgrounds.push({\n\t\t\t\t\timage: 'url(\\'' + preview.canvas.toDataURL() + '\\')',\n\t\t\t\t\tposition: (position || 'left') + ' top',\n\t\t\t\t\tsize: preview.width + 'px ' + preview.height + 'px',\n\t\t\t\t\trepeat: position ? 'repeat-y' : 'repeat',\n\t\t\t\t\torigin: 'padding-box',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar bg = {\n\t\t\t\timage: [],\n\t\t\t\tposition: [],\n\t\t\t\tsize: [],\n\t\t\t\trepeat: [],\n\t\t\t\torigin: [],\n\t\t\t};\n\t\t\tfor (var i = 0; i < backgrounds.length; i += 1) {\n\t\t\t\tbg.image.push(backgrounds[i].image);\n\t\t\t\tbg.position.push(backgrounds[i].position);\n\t\t\t\tbg.size.push(backgrounds[i].size);\n\t\t\t\tbg.repeat.push(backgrounds[i].repeat);\n\t\t\t\tbg.origin.push(backgrounds[i].origin);\n\t\t\t}\n\n\t\t\t// set previewElement's background-images\n\t\t\tvar sty = {\n\t\t\t\t'background-image': bg.image.join(', '),\n\t\t\t\t'background-position': bg.position.join(', '),\n\t\t\t\t'background-size': bg.size.join(', '),\n\t\t\t\t'background-repeat': bg.repeat.join(', '),\n\t\t\t\t'background-origin': bg.origin.join(', '),\n\t\t\t};\n\t\t\tjsc.setStyle(this.previewElement, sty, this.forceStyle);\n\n\n\t\t\t// set/restore previewElement's padding\n\t\t\tvar padding = {\n\t\t\t\tleft: null,\n\t\t\t\tright: null,\n\t\t\t};\n\t\t\tif (position) {\n\t\t\t\tpadding[position] = (this.previewSize + this.previewPadding) + 'px';\n\t\t\t}\n\n\t\t\tvar sty = {\n\t\t\t\t'padding-left': padding.left,\n\t\t\t\t'padding-right': padding.right,\n\t\t\t};\n\t\t\tjsc.setStyle(this.previewElement, sty, this.forceStyle, true);\n\t\t};\n\n\n\t\tthis.setValueElementValue = function (str) {\n\t\t\tif (this.valueElement) {\n\t\t\t\tif (jsc.nodeName(this.valueElement) === 'input') {\n\t\t\t\t\tthis.valueElement.value = str;\n\t\t\t\t} else {\n\t\t\t\t\tthis.valueElement.innerHTML = str;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\tthis.setAlphaElementValue = function (str) {\n\t\t\tif (this.alphaElement) {\n\t\t\t\tif (jsc.nodeName(this.alphaElement) === 'input') {\n\t\t\t\t\tthis.alphaElement.value = str;\n\t\t\t\t} else {\n\t\t\t\t\tthis.alphaElement.innerHTML = str;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\tthis._processParentElementsInDOM = function () {\n\t\t\tif (this._parentElementsProcessed) { return; }\n\t\t\tthis._parentElementsProcessed = true;\n\n\t\t\tvar elm = this.targetElement;\n\t\t\tdo {\n\t\t\t\t// If the target element or one of its parent nodes has fixed position,\n\t\t\t\t// then use fixed positioning instead\n\t\t\t\tvar compStyle = jsc.getCompStyle(elm);\n\t\t\t\tif (compStyle.position && compStyle.position.toLowerCase() === 'fixed') {\n\t\t\t\t\tthis.fixed = true;\n\t\t\t\t}\n\n\t\t\t\tif (elm !== this.targetElement) {\n\t\t\t\t\t// Ensure to attach onParentScroll only once to each parent element\n\t\t\t\t\t// (multiple targetElements can share the same parent nodes)\n\t\t\t\t\t//\n\t\t\t\t\t// Note: It's not just offsetParents that can be scrollable,\n\t\t\t\t\t// that's why we loop through all parent nodes\n\t\t\t\t\tif (!jsc.getData(elm, 'hasScrollListener')) {\n\t\t\t\t\t\telm.addEventListener('scroll', jsc.onParentScroll, false);\n\t\t\t\t\t\tjsc.setData(elm, 'hasScrollListener', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while ((elm = elm.parentNode) && jsc.nodeName(elm) !== 'body');\n\t\t};\n\n\n\t\tthis.tryHide = function () {\n\t\t\tif (this.hideOnLeave) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t};\n\n\n\t\tthis.set__palette = function (val) {\n\t\t\tthis.palette = val;\n\t\t\tthis._palette = jsc.parsePaletteValue(val);\n\t\t\tthis._paletteHasTransparency = jsc.containsTranparentColor(this._palette);\n\t\t};\n\n\n\t\tfunction setOption (option, value) {\n\t\t\tif (typeof option !== 'string') {\n\t\t\t\tthrow new Error('Invalid value for option name: ' + option);\n\t\t\t}\n\n\t\t\t// enum option\n\t\t\tif (jsc.enumOpts.hasOwnProperty(option)) {\n\t\t\t\tif (typeof value === 'string') { // enum string values are case insensitive\n\t\t\t\t\tvalue = value.toLowerCase();\n\t\t\t\t}\n\t\t\t\tif (jsc.enumOpts[option].indexOf(value) === -1) {\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' has invalid value: ' + value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// deprecated option\n\t\t\tif (jsc.deprecatedOpts.hasOwnProperty(option)) {\n\t\t\t\tvar oldOpt = option;\n\t\t\t\tvar newOpt = jsc.deprecatedOpts[option];\n\t\t\t\tif (newOpt) {\n\t\t\t\t\t// if we have a new name for this option, let's log a warning and use the new name\n\t\t\t\t\tconsole.warn('Option \\'%s\\' is DEPRECATED, using \\'%s\\' instead.' + jsc.docsRef, oldOpt, newOpt);\n\t\t\t\t\toption = newOpt;\n\t\t\t\t} else {\n\t\t\t\t\t// new name not available for the option\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' is DEPRECATED');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setter = 'set__' + option;\n\n\t\t\tif (typeof THIS[setter] === 'function') { // a setter exists for this option\n\t\t\t\tTHIS[setter](value);\n\t\t\t\treturn true;\n\n\t\t\t} else if (option in THIS) { // option exists as a property\n\t\t\t\tTHIS[option] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthrow new Error('Unrecognized configuration option: ' + option);\n\t\t}\n\n\n\t\tfunction getOption (option) {\n\t\t\tif (typeof option !== 'string') {\n\t\t\t\tthrow new Error('Invalid value for option name: ' + option);\n\t\t\t}\n\n\t\t\t// deprecated option\n\t\t\tif (jsc.deprecatedOpts.hasOwnProperty(option)) {\n\t\t\t\tvar oldOpt = option;\n\t\t\t\tvar newOpt = jsc.deprecatedOpts[option];\n\t\t\t\tif (newOpt) {\n\t\t\t\t\t// if we have a new name for this option, let's log a warning and use the new name\n\t\t\t\t\tconsole.warn('Option \\'%s\\' is DEPRECATED, using \\'%s\\' instead.' + jsc.docsRef, oldOpt, newOpt);\n\t\t\t\t\toption = newOpt;\n\t\t\t\t} else {\n\t\t\t\t\t// new name not available for the option\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' is DEPRECATED');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar getter = 'get__' + option;\n\n\t\t\tif (typeof THIS[getter] === 'function') { // a getter exists for this option\n\t\t\t\treturn THIS[getter](value);\n\n\t\t\t} else if (option in THIS) { // option exists as a property\n\t\t\t\treturn THIS[option];\n\t\t\t}\n\n\t\t\tthrow new Error('Unrecognized configuration option: ' + option);\n\t\t}\n\n\n\t\tfunction detachPicker () {\n\t\t\tjsc.removeClass(THIS.targetElement, jsc.pub.activeClassName);\n\t\t\tjsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);\n\t\t\tdelete jsc.picker.owner;\n\t\t}\n\n\n\t\tfunction drawPicker () {\n\n\t\t\t// At this point, when drawing the picker, we know what the parent elements are\n\t\t\t// and we can do all related DOM operations, such as registering events on them\n\t\t\t// or checking their positioning\n\t\t\tTHIS._processParentElementsInDOM();\n\n\t\t\tif (!jsc.picker) {\n\t\t\t\tjsc.picker = {\n\t\t\t\t\towner: null, // owner picker instance\n\t\t\t\t\twrap : jsc.createEl('div'),\n\t\t\t\t\tbox : jsc.createEl('div'),\n\t\t\t\t\tboxS : jsc.createEl('div'), // shadow area\n\t\t\t\t\tboxB : jsc.createEl('div'), // border\n\t\t\t\t\tpad : jsc.createEl('div'),\n\t\t\t\t\tpadB : jsc.createEl('div'), // border\n\t\t\t\t\tpadM : jsc.createEl('div'), // mouse/touch area\n\t\t\t\t\tpadCanvas : jsc.createPadCanvas(),\n\t\t\t\t\tcross : jsc.createEl('div'),\n\t\t\t\t\tcrossBY : jsc.createEl('div'), // border Y\n\t\t\t\t\tcrossBX : jsc.createEl('div'), // border X\n\t\t\t\t\tcrossLY : jsc.createEl('div'), // line Y\n\t\t\t\t\tcrossLX : jsc.createEl('div'), // line X\n\t\t\t\t\tsld : jsc.createEl('div'), // slider\n\t\t\t\t\tsldB : jsc.createEl('div'), // border\n\t\t\t\t\tsldM : jsc.createEl('div'), // mouse/touch area\n\t\t\t\t\tsldGrad : jsc.createSliderGradient(),\n\t\t\t\t\tsldPtrS : jsc.createEl('div'), // slider pointer spacer\n\t\t\t\t\tsldPtrIB : jsc.createEl('div'), // slider pointer inner border\n\t\t\t\t\tsldPtrMB : jsc.createEl('div'), // slider pointer middle border\n\t\t\t\t\tsldPtrOB : jsc.createEl('div'), // slider pointer outer border\n\t\t\t\t\tasld : jsc.createEl('div'), // alpha slider\n\t\t\t\t\tasldB : jsc.createEl('div'), // border\n\t\t\t\t\tasldM : jsc.createEl('div'), // mouse/touch area\n\t\t\t\t\tasldGrad : jsc.createASliderGradient(),\n\t\t\t\t\tasldPtrS : jsc.createEl('div'), // slider pointer spacer\n\t\t\t\t\tasldPtrIB : jsc.createEl('div'), // slider pointer inner border\n\t\t\t\t\tasldPtrMB : jsc.createEl('div'), // slider pointer middle border\n\t\t\t\t\tasldPtrOB : jsc.createEl('div'), // slider pointer outer border\n\t\t\t\t\tpal : jsc.createEl('div'), // palette\n\t\t\t\t\tbtn : jsc.createEl('div'),\n\t\t\t\t\tbtnT : jsc.createEl('span'), // text\n\t\t\t\t};\n\n\t\t\t\tjsc.picker.pad.appendChild(jsc.picker.padCanvas.elm);\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.pad);\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBY);\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBX);\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLY);\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLX);\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.cross);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padB);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padM);\n\n\t\t\t\tjsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sld);\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);\n\t\t\t\tjsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);\n\t\t\t\tjsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);\n\t\t\t\tjsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldB);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldM);\n\n\t\t\t\tjsc.picker.asld.appendChild(jsc.picker.asldGrad.elm);\n\t\t\t\tjsc.picker.asldB.appendChild(jsc.picker.asld);\n\t\t\t\tjsc.picker.asldB.appendChild(jsc.picker.asldPtrOB);\n\t\t\t\tjsc.picker.asldPtrOB.appendChild(jsc.picker.asldPtrMB);\n\t\t\t\tjsc.picker.asldPtrMB.appendChild(jsc.picker.asldPtrIB);\n\t\t\t\tjsc.picker.asldPtrIB.appendChild(jsc.picker.asldPtrS);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.asldB);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.asldM);\n\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.pal);\n\n\t\t\t\tjsc.picker.btn.appendChild(jsc.picker.btnT);\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.btn);\n\n\t\t\t\tjsc.picker.boxB.appendChild(jsc.picker.box);\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxS);\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxB);\n\n\t\t\t\tjsc.picker.wrap.addEventListener('touchstart', jsc.onPickerTouchStart,\n\t\t\t\t\tjsc.isPassiveEventSupported ? {passive: false} : false);\n\t\t\t}\n\n\t\t\tvar p = jsc.picker;\n\n\t\t\tvar displaySlider = !!jsc.getSliderChannel(THIS);\n\t\t\tvar displayAlphaSlider = THIS.hasAlphaChannel();\n\t\t\tvar pickerDims = jsc.getPickerDims(THIS);\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\n\t\t\tvar controlPadding = jsc.getControlPadding(THIS);\n\t\t\tvar borderRadius = Math.min(\n\t\t\t\tTHIS.borderRadius,\n\t\t\t\tMath.round(THIS.padding * Math.PI)); // px\n\t\t\tvar padCursor = 'crosshair';\n\n\t\t\t// wrap\n\t\t\tp.wrap.className = 'jscolor-picker-wrap';\n\t\t\tp.wrap.style.clear = 'both';\n\t\t\tp.wrap.style.width = pickerDims.borderW + 'px';\n\t\t\tp.wrap.style.height = pickerDims.borderH + 'px';\n\t\t\tp.wrap.style.zIndex = THIS.zIndex;\n\n\t\t\t// picker\n\t\t\tp.box.className = 'jscolor-picker';\n\t\t\tp.box.style.width = pickerDims.paddedW + 'px';\n\t\t\tp.box.style.height = pickerDims.paddedH + 'px';\n\t\t\tp.box.style.position = 'relative';\n\n\t\t\t// picker shadow\n\t\t\tp.boxS.className = 'jscolor-picker-shadow';\n\t\t\tp.boxS.style.position = 'absolute';\n\t\t\tp.boxS.style.left = '0';\n\t\t\tp.boxS.style.top = '0';\n\t\t\tp.boxS.style.width = '100%';\n\t\t\tp.boxS.style.height = '100%';\n\t\t\tjsc.setBorderRadius(p.boxS, borderRadius + 'px');\n\n\t\t\t// picker border\n\t\t\tp.boxB.className = 'jscolor-picker-border';\n\t\t\tp.boxB.style.position = 'relative';\n\t\t\tp.boxB.style.border = THIS.borderWidth + 'px solid';\n\t\t\tp.boxB.style.borderColor = THIS.borderColor;\n\t\t\tp.boxB.style.background = THIS.backgroundColor;\n\t\t\tjsc.setBorderRadius(p.boxB, borderRadius + 'px');\n\n\t\t\t// IE hack:\n\t\t\t// If the element is transparent, IE will trigger the event on the elements under it,\n\t\t\t// e.g. on Canvas or on elements with border\n\t\t\tp.padM.style.background = 'rgba(255,0,0,.2)';\n\t\t\tp.sldM.style.background = 'rgba(0,255,0,.2)';\n\t\t\tp.asldM.style.background = 'rgba(0,0,255,.2)';\n\n\t\t\tp.padM.style.opacity =\n\t\t\tp.sldM.style.opacity =\n\t\t\tp.asldM.style.opacity =\n\t\t\t\t'0';\n\n\t\t\t// pad\n\t\t\tp.pad.style.position = 'relative';\n\t\t\tp.pad.style.width = THIS.width + 'px';\n\t\t\tp.pad.style.height = THIS.height + 'px';\n\n\t\t\t// pad - color spectrum (HSV and HVS)\n\t\t\tp.padCanvas.draw(THIS.width, THIS.height, jsc.getPadYChannel(THIS));\n\n\t\t\t// pad border\n\t\t\tp.padB.style.position = 'absolute';\n\t\t\tp.padB.style.left = THIS.padding + 'px';\n\t\t\tp.padB.style.top = THIS.padding + 'px';\n\t\t\tp.padB.style.border = THIS.controlBorderWidth + 'px solid';\n\t\t\tp.padB.style.borderColor = THIS.controlBorderColor;\n\n\t\t\t// pad mouse area\n\t\t\tp.padM.style.position = 'absolute';\n\t\t\tp.padM.style.left = 0 + 'px';\n\t\t\tp.padM.style.top = 0 + 'px';\n\t\t\tp.padM.style.width = (THIS.padding + 2 * THIS.controlBorderWidth + THIS.width + controlPadding) + 'px';\n\t\t\tp.padM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\n\t\t\tp.padM.style.cursor = padCursor;\n\t\t\tjsc.setData(p.padM, {\n\t\t\t\tinstance: THIS,\n\t\t\t\tcontrol: 'pad',\n\t\t\t})\n\n\t\t\t// pad cross\n\t\t\tp.cross.style.position = 'absolute';\n\t\t\tp.cross.style.left =\n\t\t\tp.cross.style.top =\n\t\t\t\t'0';\n\t\t\tp.cross.style.width =\n\t\t\tp.cross.style.height =\n\t\t\t\tcrossOuterSize + 'px';\n\n\t\t\t// pad cross border Y and X\n\t\t\tp.crossBY.style.position =\n\t\t\tp.crossBX.style.position =\n\t\t\t\t'absolute';\n\t\t\tp.crossBY.style.background =\n\t\t\tp.crossBX.style.background =\n\t\t\t\tTHIS.pointerBorderColor;\n\t\t\tp.crossBY.style.width =\n\t\t\tp.crossBX.style.height =\n\t\t\t\t(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\n\t\t\tp.crossBY.style.height =\n\t\t\tp.crossBX.style.width =\n\t\t\t\tcrossOuterSize + 'px';\n\t\t\tp.crossBY.style.left =\n\t\t\tp.crossBX.style.top =\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2) - THIS.pointerBorderWidth) + 'px';\n\t\t\tp.crossBY.style.top =\n\t\t\tp.crossBX.style.left =\n\t\t\t\t'0';\n\n\t\t\t// pad cross line Y and X\n\t\t\tp.crossLY.style.position =\n\t\t\tp.crossLX.style.position =\n\t\t\t\t'absolute';\n\t\t\tp.crossLY.style.background =\n\t\t\tp.crossLX.style.background =\n\t\t\t\tTHIS.pointerColor;\n\t\t\tp.crossLY.style.height =\n\t\t\tp.crossLX.style.width =\n\t\t\t\t(crossOuterSize - 2 * THIS.pointerBorderWidth) + 'px';\n\t\t\tp.crossLY.style.width =\n\t\t\tp.crossLX.style.height =\n\t\t\t\tTHIS.pointerThickness + 'px';\n\t\t\tp.crossLY.style.left =\n\t\t\tp.crossLX.style.top =\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2)) + 'px';\n\t\t\tp.crossLY.style.top =\n\t\t\tp.crossLX.style.left =\n\t\t\t\tTHIS.pointerBorderWidth + 'px';\n\n\n\t\t\t// slider\n\t\t\tp.sld.style.overflow = 'hidden';\n\t\t\tp.sld.style.width = THIS.sliderSize + 'px';\n\t\t\tp.sld.style.height = THIS.height + 'px';\n\n\t\t\t// slider gradient\n\t\t\tp.sldGrad.draw(THIS.sliderSize, THIS.height, '#000', '#000');\n\n\t\t\t// slider border\n\t\t\tp.sldB.style.display = displaySlider ? 'block' : 'none';\n\t\t\tp.sldB.style.position = 'absolute';\n\t\t\tp.sldB.style.left = (THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + 2 * controlPadding) + 'px';\n\t\t\tp.sldB.style.top = THIS.padding + 'px';\n\t\t\tp.sldB.style.border = THIS.controlBorderWidth + 'px solid';\n\t\t\tp.sldB.style.borderColor = THIS.controlBorderColor;\n\n\t\t\t// slider mouse area\n\t\t\tp.sldM.style.display = displaySlider ? 'block' : 'none';\n\t\t\tp.sldM.style.position = 'absolute';\n\t\t\tp.sldM.style.left = (THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) + 'px';\n\t\t\tp.sldM.style.top = 0 + 'px';\n\t\t\tp.sldM.style.width = (\n\t\t\t\t\t(THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) +\n\t\t\t\t\t(displayAlphaSlider ? 0 : Math.max(0, THIS.padding - controlPadding)) // remaining padding to the right edge\n\t\t\t\t) + 'px';\n\t\t\tp.sldM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\n\t\t\tp.sldM.style.cursor = 'default';\n\t\t\tjsc.setData(p.sldM, {\n\t\t\t\tinstance: THIS,\n\t\t\t\tcontrol: 'sld',\n\t\t\t});\n\n\t\t\t// slider pointer inner and outer border\n\t\t\tp.sldPtrIB.style.border =\n\t\t\tp.sldPtrOB.style.border =\n\t\t\t\tTHIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\n\n\t\t\t// slider pointer outer border\n\t\t\tp.sldPtrOB.style.position = 'absolute';\n\t\t\tp.sldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\n\t\t\tp.sldPtrOB.style.top = '0';\n\n\t\t\t// slider pointer middle border\n\t\t\tp.sldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\n\n\t\t\t// slider pointer spacer\n\t\t\tp.sldPtrS.style.width = THIS.sliderSize + 'px';\n\t\t\tp.sldPtrS.style.height = jsc.pub.sliderInnerSpace + 'px';\n\n\n\t\t\t// alpha slider\n\t\t\tp.asld.style.overflow = 'hidden';\n\t\t\tp.asld.style.width = THIS.sliderSize + 'px';\n\t\t\tp.asld.style.height = THIS.height + 'px';\n\n\t\t\t// alpha slider gradient\n\t\t\tp.asldGrad.draw(THIS.sliderSize, THIS.height, '#000');\n\n\t\t\t// alpha slider border\n\t\t\tp.asldB.style.display = displayAlphaSlider ? 'block' : 'none';\n\t\t\tp.asldB.style.position = 'absolute';\n\t\t\tp.asldB.style.left = (\n\t\t\t\t\t(THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) +\n\t\t\t\t\t(displaySlider ? (THIS.sliderSize + 3 * controlPadding + 2 * THIS.controlBorderWidth) : 0)\n\t\t\t\t) + 'px';\n\t\t\tp.asldB.style.top = THIS.padding + 'px';\n\t\t\tp.asldB.style.border = THIS.controlBorderWidth + 'px solid';\n\t\t\tp.asldB.style.borderColor = THIS.controlBorderColor;\n\n\t\t\t// alpha slider mouse area\n\t\t\tp.asldM.style.display = displayAlphaSlider ? 'block' : 'none';\n\t\t\tp.asldM.style.position = 'absolute';\n\t\t\tp.asldM.style.left = (\n\t\t\t\t\t(THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) +\n\t\t\t\t\t(displaySlider ? (THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) : 0)\n\t\t\t\t) + 'px';\n\t\t\tp.asldM.style.top = 0 + 'px';\n\t\t\tp.asldM.style.width = (\n\t\t\t\t\t(THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) +\n\t\t\t\t\tMath.max(0, THIS.padding - controlPadding) // remaining padding to the right edge\n\t\t\t\t) + 'px';\n\t\t\tp.asldM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\n\t\t\tp.asldM.style.cursor = 'default';\n\t\t\tjsc.setData(p.asldM, {\n\t\t\t\tinstance: THIS,\n\t\t\t\tcontrol: 'asld',\n\t\t\t})\n\n\t\t\t// alpha slider pointer inner and outer border\n\t\t\tp.asldPtrIB.style.border =\n\t\t\tp.asldPtrOB.style.border =\n\t\t\t\tTHIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\n\n\t\t\t// alpha slider pointer outer border\n\t\t\tp.asldPtrOB.style.position = 'absolute';\n\t\t\tp.asldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\n\t\t\tp.asldPtrOB.style.top = '0';\n\n\t\t\t// alpha slider pointer middle border\n\t\t\tp.asldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\n\n\t\t\t// alpha slider pointer spacer\n\t\t\tp.asldPtrS.style.width = THIS.sliderSize + 'px';\n\t\t\tp.asldPtrS.style.height = jsc.pub.sliderInnerSpace + 'px';\n\n\n\t\t\t// palette\n\t\t\tp.pal.className = 'jscolor-palette';\n\t\t\tp.pal.style.display = pickerDims.palette.rows ? 'block' : 'none';\n\t\t\tp.pal.style.position = 'absolute';\n\t\t\tp.pal.style.left = THIS.padding + 'px';\n\t\t\tp.pal.style.top = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\n\n\t\t\t// palette's color samples\n\n\t\t\tp.pal.innerHTML = '';\n\n\t\t\tvar chessboard = jsc.genColorPreviewCanvas('rgba(0,0,0,0)');\n\n\t\t\tvar si = 0; // color sample's index\n\t\t\tfor (var r = 0; r < pickerDims.palette.rows; r++) {\n\t\t\t\tfor (var c = 0; c < pickerDims.palette.cols && si < THIS._palette.length; c++, si++) {\n\t\t\t\t\tvar sampleColor = THIS._palette[si];\n\t\t\t\t\tvar sampleCssColor = jsc.rgbaColor.apply(null, sampleColor.rgba);\n\n\t\t\t\t\tvar sc = jsc.createEl('div'); // color sample's color\n\t\t\t\t\tsc.style.width = (pickerDims.palette.cellW - 2 * THIS.controlBorderWidth) + 'px';\n\t\t\t\t\tsc.style.height = (pickerDims.palette.cellH - 2 * THIS.controlBorderWidth) + 'px';\n\t\t\t\t\tsc.style.backgroundColor = sampleCssColor;\n\n\t\t\t\t\tvar sw = jsc.createEl('div'); // color sample's wrap\n\t\t\t\t\tsw.className = 'jscolor-palette-sample';\n\t\t\t\t\tsw.style.display = 'block';\n\t\t\t\t\tsw.style.position = 'absolute';\n\t\t\t\t\tsw.style.left = (\n\t\t\t\t\t\t\tpickerDims.palette.cols <= 1 ? 0 :\n\t\t\t\t\t\t\tMath.round(10 * (c * ((pickerDims.contentW - pickerDims.palette.cellW) / (pickerDims.palette.cols - 1)))) / 10\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t\tsw.style.top = (r * (pickerDims.palette.cellH + THIS.paletteSpacing)) + 'px';\n\t\t\t\t\tsw.style.border = THIS.controlBorderWidth + 'px solid';\n\t\t\t\t\tsw.style.borderColor = THIS.controlBorderColor;\n\t\t\t\t\tsw.style.cursor = 'pointer';\n\t\t\t\t\tif (sampleColor.rgba[3] !== null && sampleColor.rgba[3] < 1.0) { // only create chessboard background if the sample has transparency\n\t\t\t\t\t\tsw.style.backgroundImage = 'url(\\'' + chessboard.canvas.toDataURL() + '\\')';\n\t\t\t\t\t\tsw.style.backgroundRepeat = 'repeat';\n\t\t\t\t\t\tsw.style.backgroundPosition = 'center center';\n\t\t\t\t\t}\n\t\t\t\t\tjsc.setData(sw, {\n\t\t\t\t\t\tinstance: THIS,\n\t\t\t\t\t\tcontrol: 'palette-sample',\n\t\t\t\t\t\tcolor: sampleColor,\n\t\t\t\t\t})\n\t\t\t\t\tsw.addEventListener('click', jsc.onPaletteSampleClick, false);\n\t\t\t\t\tsw.appendChild(sc);\n\t\t\t\t\tp.pal.appendChild(sw);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// the Close button\n\t\t\tfunction setBtnBorder () {\n\t\t\t\tvar insetColors = THIS.controlBorderColor.split(/\\s+/);\n\t\t\t\tvar outsetColor = insetColors.length < 2 ? insetColors[0] : insetColors[1] + ' ' + insetColors[0] + ' ' + insetColors[0] + ' ' + insetColors[1];\n\t\t\t\tp.btn.style.borderColor = outsetColor;\n\t\t\t}\n\t\t\tvar btnPadding = 15; // px\n\t\t\tp.btn.className = 'jscolor-btn-close';\n\t\t\tp.btn.style.display = THIS.closeButton ? 'block' : 'none';\n\t\t\tp.btn.style.position = 'absolute';\n\t\t\tp.btn.style.left = THIS.padding + 'px';\n\t\t\tp.btn.style.bottom = THIS.padding + 'px';\n\t\t\tp.btn.style.padding = '0 ' + btnPadding + 'px';\n\t\t\tp.btn.style.maxWidth = (pickerDims.contentW - 2 * THIS.controlBorderWidth - 2 * btnPadding) + 'px';\n\t\t\tp.btn.style.overflow = 'hidden';\n\t\t\tp.btn.style.height = THIS.buttonHeight + 'px';\n\t\t\tp.btn.style.whiteSpace = 'nowrap';\n\t\t\tp.btn.style.border = THIS.controlBorderWidth + 'px solid';\n\t\t\tsetBtnBorder();\n\t\t\tp.btn.style.color = THIS.buttonColor;\n\t\t\tp.btn.style.font = '12px sans-serif';\n\t\t\tp.btn.style.textAlign = 'center';\n\t\t\tp.btn.style.cursor = 'pointer';\n\t\t\tp.btn.onmousedown = function () {\n\t\t\t\tTHIS.hide();\n\t\t\t};\n\t\t\tp.btnT.style.lineHeight = THIS.buttonHeight + 'px';\n\t\t\tp.btnT.innerHTML = '';\n\t\t\tp.btnT.appendChild(window.document.createTextNode(THIS.closeText));\n\n\t\t\t// reposition the pointers\n\t\t\tredrawPad();\n\t\t\tredrawSld();\n\t\t\tredrawASld();\n\n\t\t\t// If we are changing the owner without first closing the picker,\n\t\t\t// make sure to first deal with the old owner\n\t\t\tif (jsc.picker.owner && jsc.picker.owner !== THIS) {\n\t\t\t\tjsc.removeClass(jsc.picker.owner.targetElement, jsc.pub.activeClassName);\n\t\t\t}\n\n\t\t\t// Set a new picker owner\n\t\t\tjsc.picker.owner = THIS;\n\n\t\t\t// The redrawPosition() method needs picker.owner to be set, that's why we call it here,\n\t\t\t// after setting the owner\n\t\t\tif (THIS.container === window.document.body) {\n\t\t\t\tjsc.redrawPosition();\n\t\t\t} else {\n\t\t\t\tjsc._drawPosition(THIS, 0, 0, 'relative', false);\n\t\t\t}\n\n\t\t\tif (p.wrap.parentNode !== THIS.container) {\n\t\t\t\tTHIS.container.appendChild(p.wrap);\n\t\t\t}\n\n\t\t\tjsc.addClass(THIS.targetElement, jsc.pub.activeClassName);\n\t\t}\n\n\n\t\tfunction redrawPad () {\n\t\t\t// redraw the pad pointer\n\t\t\tvar yChannel = jsc.getPadYChannel(THIS);\n\t\t\tvar x = Math.round((THIS.channels.h / 360) * (THIS.width - 1));\n\t\t\tvar y = Math.round((1 - THIS.channels[yChannel] / 100) * (THIS.height - 1));\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\n\t\t\tvar ofs = -Math.floor(crossOuterSize / 2);\n\t\t\tjsc.picker.cross.style.left = (x + ofs) + 'px';\n\t\t\tjsc.picker.cross.style.top = (y + ofs) + 'px';\n\n\t\t\t// redraw the slider\n\t\t\tswitch (jsc.getSliderChannel(THIS)) {\n\t\t\tcase 's':\n\t\t\t\tvar rgb1 = jsc.HSV_RGB(THIS.channels.h, 100, THIS.channels.v);\n\t\t\t\tvar rgb2 = jsc.HSV_RGB(THIS.channels.h, 0, THIS.channels.v);\n\t\t\t\tvar color1 = 'rgb(' +\n\t\t\t\t\tMath.round(rgb1[0]) + ',' +\n\t\t\t\t\tMath.round(rgb1[1]) + ',' +\n\t\t\t\t\tMath.round(rgb1[2]) + ')';\n\t\t\t\tvar color2 = 'rgb(' +\n\t\t\t\t\tMath.round(rgb2[0]) + ',' +\n\t\t\t\t\tMath.round(rgb2[1]) + ',' +\n\t\t\t\t\tMath.round(rgb2[2]) + ')';\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\n\t\t\t\tbreak;\n\t\t\tcase 'v':\n\t\t\t\tvar rgb = jsc.HSV_RGB(THIS.channels.h, THIS.channels.s, 100);\n\t\t\t\tvar color1 = 'rgb(' +\n\t\t\t\t\tMath.round(rgb[0]) + ',' +\n\t\t\t\t\tMath.round(rgb[1]) + ',' +\n\t\t\t\t\tMath.round(rgb[2]) + ')';\n\t\t\t\tvar color2 = '#000';\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// redraw the alpha slider\n\t\t\tjsc.picker.asldGrad.draw(THIS.sliderSize, THIS.height, THIS.toHEXString());\n\t\t}\n\n\n\t\tfunction redrawSld () {\n\t\t\tvar sldChannel = jsc.getSliderChannel(THIS);\n\t\t\tif (sldChannel) {\n\t\t\t\t// redraw the slider pointer\n\t\t\t\tvar y = Math.round((1 - THIS.channels[sldChannel] / 100) * (THIS.height - 1));\n\t\t\t\tjsc.picker.sldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(jsc.pub.sliderInnerSpace / 2)) + 'px';\n\t\t\t}\n\n\t\t\t// redraw the alpha slider\n\t\t\tjsc.picker.asldGrad.draw(THIS.sliderSize, THIS.height, THIS.toHEXString());\n\t\t}\n\n\n\t\tfunction redrawASld () {\n\t\t\tvar y = Math.round((1 - THIS.channels.a) * (THIS.height - 1));\n\t\t\tjsc.picker.asldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(jsc.pub.sliderInnerSpace / 2)) + 'px';\n\t\t}\n\n\n\t\tfunction isPickerOwner () {\n\t\t\treturn jsc.picker && jsc.picker.owner === THIS;\n\t\t}\n\n\n\t\tfunction onValueKeyDown (ev) {\n\t\t\tif (jsc.eventKey(ev) === 'Enter') {\n\t\t\t\tif (THIS.valueElement) {\n\t\t\t\t\tTHIS.processValueInput(THIS.valueElement.value);\n\t\t\t\t}\n\t\t\t\tTHIS.tryHide();\n\t\t\t}\n\t\t}\n\n\n\t\tfunction onAlphaKeyDown (ev) {\n\t\t\tif (jsc.eventKey(ev) === 'Enter') {\n\t\t\t\tif (THIS.alphaElement) {\n\t\t\t\t\tTHIS.processAlphaInput(THIS.alphaElement.value);\n\t\t\t\t}\n\t\t\t\tTHIS.tryHide();\n\t\t\t}\n\t\t}\n\n\n\t\tfunction onValueChange (ev) {\n\t\t\tif (jsc.getData(ev, 'internal')) {\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\n\t\t\t}\n\n\t\t\tvar oldVal = THIS.valueElement.value;\n\n\t\t\tTHIS.processValueInput(THIS.valueElement.value); // this might change the value\n\n\t\t\tjsc.triggerCallback(THIS, 'onChange');\n\n\t\t\tif (THIS.valueElement.value !== oldVal) {\n\t\t\t\t// value was additionally changed -> let's trigger the change event again, even though it was natively dispatched\n\t\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'change', true, true);\n\t\t\t}\n\t\t}\n\n\n\t\tfunction onAlphaChange (ev) {\n\t\t\tif (jsc.getData(ev, 'internal')) {\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\n\t\t\t}\n\n\t\t\tvar oldVal = THIS.alphaElement.value;\n\n\t\t\tTHIS.processAlphaInput(THIS.alphaElement.value); // this might change the value\n\n\t\t\tjsc.triggerCallback(THIS, 'onChange');\n\n\t\t\t// triggering valueElement's onChange (because changing alpha changes the entire color, e.g. with rgba format)\n\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'change', true, true);\n\n\t\t\tif (THIS.alphaElement.value !== oldVal) {\n\t\t\t\t// value was additionally changed -> let's trigger the change event again, even though it was natively dispatched\n\t\t\t\tjsc.triggerInputEvent(THIS.alphaElement, 'change', true, true);\n\t\t\t}\n\t\t}\n\n\n\t\tfunction onValueInput (ev) {\n\t\t\tif (jsc.getData(ev, 'internal')) {\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\n\t\t\t}\n\n\t\t\tif (THIS.valueElement) {\n\t\t\t\tTHIS.fromString(THIS.valueElement.value, jsc.flags.leaveValue);\n\t\t\t}\n\n\t\t\tjsc.triggerCallback(THIS, 'onInput');\n\n\t\t\t// triggering valueElement's onInput\n\t\t\t// (not needed, it was dispatched normally by the browser)\n\t\t}\n\n\n\t\tfunction onAlphaInput (ev) {\n\t\t\tif (jsc.getData(ev, 'internal')) {\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\n\t\t\t}\n\n\t\t\tif (THIS.alphaElement) {\n\t\t\t\tTHIS.fromHSVA(null, null, null, parseFloat(THIS.alphaElement.value), jsc.flags.leaveAlpha);\n\t\t\t}\n\n\t\t\tjsc.triggerCallback(THIS, 'onInput');\n\n\t\t\t// triggering valueElement's onInput (because changing alpha changes the entire color, e.g. with rgba format)\n\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'input', true, true);\n\t\t}\n\n\n\t\t// let's process the DEPRECATED 'options' property (this will be later removed)\n\t\tif (jsc.pub.options) {\n\t\t\t// let's set custom default options, if specified\n\t\t\tfor (var opt in jsc.pub.options) {\n\t\t\t\tif (jsc.pub.options.hasOwnProperty(opt)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsetOption(opt, jsc.pub.options[opt]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// let's apply configuration presets\n\t\t//\n\t\tvar presetsArr = [];\n\n\t\tif (opts.preset) {\n\t\t\tif (typeof opts.preset === 'string') {\n\t\t\t\tpresetsArr = opts.preset.split(/\\s+/);\n\t\t\t} else if (Array.isArray(opts.preset)) {\n\t\t\t\tpresetsArr = opts.preset.slice(); // slice() to clone\n\t\t\t} else {\n\t\t\t\tconsole.warn('Unrecognized preset value');\n\t\t\t}\n\t\t}\n\n\t\t// always use the 'default' preset. If it's not listed, append it to the end.\n\t\tif (presetsArr.indexOf('default') === -1) {\n\t\t\tpresetsArr.push('default');\n\t\t}\n\n\t\t// let's apply the presets in reverse order, so that should there be any overlapping options,\n\t\t// the formerly listed preset will override the latter\n\t\tfor (var i = presetsArr.length - 1; i >= 0; i -= 1) {\n\t\t\tvar pres = presetsArr[i];\n\t\t\tif (!pres) {\n\t\t\t\tcontinue; // preset is empty string\n\t\t\t}\n\t\t\tif (!jsc.pub.presets.hasOwnProperty(pres)) {\n\t\t\t\tconsole.warn('Unknown preset: %s', pres);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (var opt in jsc.pub.presets[pres]) {\n\t\t\t\tif (jsc.pub.presets[pres].hasOwnProperty(opt)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsetOption(opt, jsc.pub.presets[pres][opt]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// let's set specific options for this color picker\n\t\tvar nonProperties = [\n\t\t\t// these options won't be set as instance properties\n\t\t\t'preset',\n\t\t];\n\t\tfor (var opt in opts) {\n\t\t\tif (opts.hasOwnProperty(opt)) {\n\t\t\t\tif (nonProperties.indexOf(opt) === -1) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsetOption(opt, opts[opt]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t//\n\t\t// Install the color picker on chosen element(s)\n\t\t//\n\n\n\t\t// Determine picker's container element\n\t\tif (this.container === undefined) {\n\t\t\tthis.container = window.document.body; // default container is BODY element\n\n\t\t} else { // explicitly set to custom element\n\t\t\tthis.container = jsc.node(this.container);\n\t\t}\n\n\t\tif (!this.container) {\n\t\t\tthrow new Error('Cannot instantiate color picker without a container element');\n\t\t}\n\n\n\t\t// Fetch the target element\n\t\tthis.targetElement = jsc.node(targetElement);\n\n\t\tif (!this.targetElement) {\n\t\t\t// temporarily customized error message to help with migrating from versions prior to 2.2\n\t\t\tif (typeof targetElement === 'string' && /^[a-zA-Z][\\w:.-]*$/.test(targetElement)) {\n\t\t\t\t// targetElement looks like valid ID\n\t\t\t\tvar possiblyId = targetElement;\n\t\t\t\tthrow new Error('If \\'' + possiblyId + '\\' is supposed to be an ID, please use \\'#' + possiblyId + '\\' or any valid CSS selector.');\n\t\t\t}\n\n\t\t\tthrow new Error('Cannot instantiate color picker without a target element');\n\t\t}\n\n\t\tif (this.targetElement.jscolor && this.targetElement.jscolor instanceof jsc.pub) {\n\t\t\tthrow new Error('Color picker already installed on this element');\n\t\t}\n\n\n\t\t// link this instance with the target element\n\t\tthis.targetElement.jscolor = this;\n\t\tjsc.addClass(this.targetElement, jsc.pub.className);\n\n\t\t// register this instance\n\t\tjsc.instances.push(this);\n\n\n\t\t// if target is BUTTON\n\t\tif (jsc.isButton(this.targetElement)) {\n\n\t\t\tif (this.targetElement.type.toLowerCase() !== 'button') {\n\t\t\t\t// on buttons, always force type to be 'button', e.g. in situations the target <button> has no type\n\t\t\t\t// and thus defaults to 'submit' and would submit the form when clicked\n\t\t\t\tthis.targetElement.type = 'button';\n\t\t\t}\n\n\t\t\tif (jsc.isButtonEmpty(this.targetElement)) { // empty button\n\t\t\t\t// it is important to clear element's contents first.\n\t\t\t\t// if we're re-instantiating color pickers on DOM that has been modified by changing page's innerHTML,\n\t\t\t\t// we would keep adding more non-breaking spaces to element's content (because element's contents survive\n\t\t\t\t// innerHTML changes, but picker instances don't)\n\t\t\t\tjsc.removeChildren(this.targetElement);\n\n\t\t\t\t// let's insert a non-breaking space\n\t\t\t\tthis.targetElement.appendChild(window.document.createTextNode('\\xa0'));\n\n\t\t\t\t// set min-width = previewSize, if not already greater\n\t\t\t\tvar compStyle = jsc.getCompStyle(this.targetElement);\n\t\t\t\tvar currMinWidth = parseFloat(compStyle['min-width']) || 0;\n\t\t\t\tif (currMinWidth < this.previewSize) {\n\t\t\t\t\tjsc.setStyle(this.targetElement, {\n\t\t\t\t\t\t'min-width': this.previewSize + 'px',\n\t\t\t\t\t}, this.forceStyle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Determine the value element\n\t\tif (this.valueElement === undefined) {\n\t\t\tif (jsc.isTextInput(this.targetElement)) {\n\t\t\t\t// for text inputs, default valueElement is targetElement\n\t\t\t\tthis.valueElement = this.targetElement;\n\t\t\t} else {\n\t\t\t\t// leave it undefined\n\t\t\t}\n\n\t\t} else if (this.valueElement === null) { // explicitly set to null\n\t\t\t// leave it null\n\n\t\t} else { // explicitly set to custom element\n\t\t\tthis.valueElement = jsc.node(this.valueElement);\n\t\t}\n\n\t\t// Determine the alpha element\n\t\tif (this.alphaElement) {\n\t\t\tthis.alphaElement = jsc.node(this.alphaElement);\n\t\t}\n\n\t\t// Determine the preview element\n\t\tif (this.previewElement === undefined) {\n\t\t\tthis.previewElement = this.targetElement; // default previewElement is targetElement\n\n\t\t} else if (this.previewElement === null) { // explicitly set to null\n\t\t\t// leave it null\n\n\t\t} else { // explicitly set to custom element\n\t\t\tthis.previewElement = jsc.node(this.previewElement);\n\t\t}\n\n\t\t// valueElement\n\t\tif (this.valueElement && jsc.isTextInput(this.valueElement)) {\n\n\t\t\t// If the value element has onInput event already set, we need to detach it and attach AFTER our listener.\n\t\t\t// otherwise the picker instance would still contain the old color when accessed from the onInput handler.\n\t\t\tvar valueElementOrigEvents = {\n\t\t\t\tonInput: this.valueElement.oninput\n\t\t\t};\n\t\t\tthis.valueElement.oninput = null;\n\n\t\t\tthis.valueElement.addEventListener('keydown', onValueKeyDown, false);\n\t\t\tthis.valueElement.addEventListener('change', onValueChange, false);\n\t\t\tthis.valueElement.addEventListener('input', onValueInput, false);\n\t\t\t// the original event listener must be attached AFTER our handler (to let it first set picker's color)\n\t\t\tif (valueElementOrigEvents.onInput) {\n\t\t\t\tthis.valueElement.addEventListener('input', valueElementOrigEvents.onInput, false);\n\t\t\t}\n\n\t\t\tthis.valueElement.setAttribute('autocomplete', 'off');\n\t\t\tthis.valueElement.setAttribute('autocorrect', 'off');\n\t\t\tthis.valueElement.setAttribute('autocapitalize', 'off');\n\t\t\tthis.valueElement.setAttribute('spellcheck', false);\n\t\t}\n\n\t\t// alphaElement\n\t\tif (this.alphaElement && jsc.isTextInput(this.alphaElement)) {\n\t\t\tthis.alphaElement.addEventListener('keydown', onAlphaKeyDown, false);\n\t\t\tthis.alphaElement.addEventListener('change', onAlphaChange, false);\n\t\t\tthis.alphaElement.addEventListener('input', onAlphaInput, false);\n\n\t\t\tthis.alphaElement.setAttribute('autocomplete', 'off');\n\t\t\tthis.alphaElement.setAttribute('autocorrect', 'off');\n\t\t\tthis.alphaElement.setAttribute('autocapitalize', 'off');\n\t\t\tthis.alphaElement.setAttribute('spellcheck', false);\n\t\t}\n\n\t\t// determine initial color value\n\t\t//\n\t\tvar initValue = 'FFFFFF';\n\n\t\tif (this.value !== undefined) {\n\t\t\tinitValue = this.value; // get initial color from the 'value' property\n\t\t} else if (this.valueElement && this.valueElement.value !== undefined) {\n\t\t\tinitValue = this.valueElement.value; // get initial color from valueElement's value\n\t\t}\n\n\t\t// determine initial alpha value\n\t\t//\n\t\tvar initAlpha = undefined;\n\n\t\tif (this.alpha !== undefined) {\n\t\t\tinitAlpha = (''+this.alpha); // get initial alpha value from the 'alpha' property\n\t\t} else if (this.alphaElement && this.alphaElement.value !== undefined) {\n\t\t\tinitAlpha = this.alphaElement.value; // get initial color from alphaElement's value\n\t\t}\n\n\t\t// determine current format based on the initial color value\n\t\t//\n\t\tthis._currentFormat = null;\n\n\t\tif (['auto', 'any'].indexOf(this.format.toLowerCase()) > -1) {\n\t\t\t// format is 'auto' or 'any' -> let's auto-detect current format\n\t\t\tvar color = jsc.parseColorString(initValue);\n\t\t\tthis._currentFormat = color ? color.format : 'hex';\n\t\t} else {\n\t\t\t// format is specified\n\t\t\tthis._currentFormat = this.format.toLowerCase();\n\t\t}\n\n\n\t\t// let's parse the initial color value and expose color's preview\n\t\tthis.processValueInput(initValue);\n\n\t\t// let's also parse and expose the initial alpha value, if any\n\t\t//\n\t\t// Note: If the initial color value contains alpha value in it (e.g. in rgba format),\n\t\t// this will overwrite it. So we should only process alpha input if there was initial\n\t\t// alpha explicitly set, otherwise we could needlessly lose initial value's alpha\n\t\tif (initAlpha !== undefined) {\n\t\t\tthis.processAlphaInput(initAlpha);\n\t\t}\n\n\t\tif (this.random) {\n\t\t\t// randomize the initial color value\n\t\t\tthis.randomize.apply(this, Array.isArray(this.random) ? this.random : []);\n\t\t}\n\n\t}\n\n};\n\n\n//================================\n// Public properties and methods\n//================================\n\n//\n// These will be publicly available via jscolor.<name> and JSColor.<name>\n//\n\n\n// class that will be set to elements having jscolor installed on them\njsc.pub.className = 'jscolor';\n\n\n// class that will be set to elements having jscolor active on them\njsc.pub.activeClassName = 'jscolor-active';\n\n\n// whether to try to parse the options string by evaluating it using 'new Function()'\n// in case it could not be parsed with JSON.parse()\njsc.pub.looseJSON = true;\n\n\n// presets\njsc.pub.presets = {};\n\n// built-in presets\njsc.pub.presets['default'] = {}; // baseline for customization\n\njsc.pub.presets['light'] = { // default color scheme\n\tbackgroundColor: 'rgba(255,255,255,1)',\n\tcontrolBorderColor: 'rgba(187,187,187,1)',\n\tbuttonColor: 'rgba(0,0,0,1)',\n};\njsc.pub.presets['dark'] = {\n\tbackgroundColor: 'rgba(51,51,51,1)',\n\tcontrolBorderColor: 'rgba(153,153,153,1)',\n\tbuttonColor: 'rgba(240,240,240,1)',\n};\n\njsc.pub.presets['small'] = { width:101, height:101, padding:10, sliderSize:14, paletteCols:8 };\njsc.pub.presets['medium'] = { width:181, height:101, padding:12, sliderSize:16, paletteCols:10 }; // default size\njsc.pub.presets['large'] = { width:271, height:151, padding:12, sliderSize:24, paletteCols:15 };\n\njsc.pub.presets['thin'] = { borderWidth:1, controlBorderWidth:1, pointerBorderWidth:1 }; // default thickness\njsc.pub.presets['thick'] = { borderWidth:2, controlBorderWidth:2, pointerBorderWidth:2 };\n\n\n// size of space in the sliders\njsc.pub.sliderInnerSpace = 3; // px\n\n// transparency chessboard\njsc.pub.chessboardSize = 8; // px\njsc.pub.chessboardColor1 = '#666666';\njsc.pub.chessboardColor2 = '#999999';\n\n// preview separator\njsc.pub.previewSeparator = ['rgba(255,255,255,.65)', 'rgba(128,128,128,.65)'];\n\n\n// Initializes jscolor\njsc.pub.init = function () {\n\tif (jsc.initialized) {\n\t\treturn;\n\t}\n\n\t// attach some necessary handlers\n\twindow.document.addEventListener('mousedown', jsc.onDocumentMouseDown, false);\n\twindow.document.addEventListener('keyup', jsc.onDocumentKeyUp, false);\n\twindow.addEventListener('resize', jsc.onWindowResize, false);\n\twindow.addEventListener('scroll', jsc.onWindowScroll, false);\n\n\t// install jscolor on current DOM\n\tjsc.pub.install();\n\n\tjsc.initialized = true;\n\n\t// call functions waiting in the queue\n\twhile (jsc.readyQueue.length) {\n\t\tvar func = jsc.readyQueue.shift();\n\t\tfunc();\n\t}\n};\n\n\n// Installs jscolor on current DOM tree\njsc.pub.install = function (rootNode) {\n\tvar success = true;\n\n\ttry {\n\t\tjsc.installBySelector('[data-jscolor]', rootNode);\n\t} catch (e) {\n\t\tsuccess = false;\n\t\tconsole.warn(e);\n\t}\n\n\t// for backward compatibility with DEPRECATED installation using class name\n\tif (jsc.pub.lookupClass) {\n\t\ttry {\n\t\t\tjsc.installBySelector(\n\t\t\t\t(\n\t\t\t\t\t'input.' + jsc.pub.lookupClass + ', ' +\n\t\t\t\t\t'button.' + jsc.pub.lookupClass\n\t\t\t\t),\n\t\t\t\trootNode\n\t\t\t);\n\t\t} catch (e) {}\n\t}\n\n\treturn success;\n};\n\n\n// Registers function to be called as soon as jscolor is initialized (or immediately, if it already is).\n//\njsc.pub.ready = function (func) {\n\tif (typeof func !== 'function') {\n\t\tconsole.warn('Passed value is not a function');\n\t\treturn false;\n\t}\n\n\tif (jsc.initialized) {\n\t\tfunc();\n\t} else {\n\t\tjsc.readyQueue.push(func);\n\t}\n\treturn true;\n};\n\n\n// Triggers given input event(s) (e.g. 'input' or 'change') on all color pickers.\n//\n// It is possible to specify multiple events separated with a space.\n// If called before jscolor is initialized, then the events will be triggered after initialization.\n//\njsc.pub.trigger = function (eventNames) {\n\tvar triggerNow = function () {\n\t\tjsc.triggerGlobal(eventNames);\n\t};\n\n\tif (jsc.initialized) {\n\t\ttriggerNow();\n\t} else {\n\t\tjsc.pub.ready(triggerNow);\n\t}\n};\n\n\n// Hides current color picker box\njsc.pub.hide = function () {\n\tif (jsc.picker && jsc.picker.owner) {\n\t\tjsc.picker.owner.hide();\n\t}\n};\n\n\n// Returns a data URL of a gray chessboard image that indicates transparency\njsc.pub.chessboard = function (color) {\n\tif (!color) {\n\t\tcolor = 'rgba(0,0,0,0)';\n\t}\n\tvar preview = jsc.genColorPreviewCanvas(color);\n\treturn preview.canvas.toDataURL();\n};\n\n\n// Returns a data URL of a gray chessboard image that indicates transparency\njsc.pub.background = function (color) {\n\tvar backgrounds = [];\n\n\t// CSS gradient for background color preview\n\tbackgrounds.push(jsc.genColorPreviewGradient(color));\n\n\t// data URL of generated PNG image with a gray transparency chessboard\n\tvar preview = jsc.genColorPreviewCanvas();\n\tbackgrounds.push([\n\t\t'url(\\'' + preview.canvas.toDataURL() + '\\')',\n\t\t'left top',\n\t\t'repeat',\n\t].join(' '));\n\n\treturn backgrounds.join(', ');\n};\n\n\n//\n// DEPRECATED properties and methods\n//\n\n\n// DEPRECATED. Use jscolor.presets.default instead.\n//\n// Custom default options for all color pickers, e.g. { hash: true, width: 300 }\njsc.pub.options = {};\n\n\n// DEPRECATED. Use data-jscolor attribute instead, which installs jscolor on given element.\n//\n// By default, we'll search for all elements with class=\"jscolor\" and install a color picker on them.\n//\n// You can change what class name will be looked for by setting the property jscolor.lookupClass\n// anywhere in your HTML document. To completely disable the automatic lookup, set it to null.\n//\njsc.pub.lookupClass = 'jscolor';\n\n\n// DEPRECATED. Use data-jscolor attribute instead, which installs jscolor on given element.\n//\n// Install jscolor on all elements that have the specified class name\njsc.pub.installByClassName = function () {\n\tconsole.error('jscolor.installByClassName() is DEPRECATED. Use data-jscolor=\"\" attribute instead of a class name.' + jsc.docsRef);\n\treturn false;\n};\n\n\njsc.register();\n\n\nreturn jsc.pub;\n\n\n})(); // END jscolor\n\n\nif (typeof window.jscolor === 'undefined') {\n\twindow.jscolor = window.JSColor = jscolor;\n}\n\n\n// END jscolor code\n\nreturn jscolor;\n\n}); // END factory\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClfA;AACA;AAgBA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAWA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AADA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AACA;AAKA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AATA;AACA;AAYA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAlCA;AAotBA;AACA;AACA;AAwpsGA;AA0sGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AAIA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;A","sourceRoot":""}